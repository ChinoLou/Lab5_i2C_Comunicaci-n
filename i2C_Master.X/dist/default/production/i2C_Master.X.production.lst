

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 24 17:39:52 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  0006                     _PORTB	set	6
   379  0005                     _PORTA	set	5
   380  0008                     _PORTD	set	8
   381  0063                     _SSPIF	set	99
   382  005E                     _PEIE	set	94
   383  005F                     _GIE	set	95
   384  002C                     _RA4	set	44
   385  002B                     _RA3	set	43
   386  0091                     _SSPCON2bits	set	145
   387  0087                     _TRISCbits	set	135
   388  0094                     _SSPSTAT	set	148
   389  0093                     _SSPADD	set	147
   390  0091                     _SSPCON2	set	145
   391  0088                     _TRISD	set	136
   392  0086                     _TRISB	set	134
   393  0085                     _TRISAbits	set	133
   394  0463                     _SSPIE	set	1123
   395  043C                     _TRISC4	set	1084
   396  043B                     _TRISC3	set	1083
   397  0189                     _ANSELH	set	393
   398  0188                     _ANSEL	set	392
   399                           
   400                           	psect	strings
   401  0003                     __pstrings:	
   402  0003                     stringtab:	
   403  0003                     __stringtab:	
   404  0003                     stringcode:	
   405                           ;	String table - string pointers are 1 byte each
   406                           
   407  0003                     stringdir:	
   408  0003  3000               	movlw	high stringdir
   409  0004  008A               	movwf	10
   410  0005  0804               	movf	4,w
   411  0006  0A84               	incf	4,f
   412  0007  0782               	addwf	2,f
   413  0008                     __stringbase:	
   414  0008  3400               	retlw	0
   415  0009                     __end_of__stringtab:	
   416  0009                     STR_1:	
   417  0009  3453               	retlw	83	;'S'
   418  000A  3431               	retlw	49	;'1'
   419  000B  3420               	retlw	32	;' '
   420  000C  3420               	retlw	32	;' '
   421  000D  3420               	retlw	32	;' '
   422  000E  3420               	retlw	32	;' '
   423  000F  3453               	retlw	83	;'S'
   424  0010  3432               	retlw	50	;'2'
   425  0011  3420               	retlw	32	;' '
   426  0012  3420               	retlw	32	;' '
   427  0013  3420               	retlw	32	;' '
   428  0014  3453               	retlw	83	;'S'
   429  0015  3433               	retlw	51	;'3'
   430  0016  3400               	retlw	0
   431                           
   432                           ; #config settings
   433  0000                     
   434                           	psect	cinit
   435  07EF                     start_initialization:	
   436  07EF                     __initialization:	
   437                           
   438                           ; Clear objects allocated to BANK0
   439  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   440  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   441  07F1  01AC               	clrf	__pbssBANK0& (0+127)
   442  07F2  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   443  07F3  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   444  07F4  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   445  07F5  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   446  07F6  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   447  07F7  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   448  07F8  01B3               	clrf	(__pbssBANK0+7)& (0+127)
   449  07F9  01B4               	clrf	(__pbssBANK0+8)& (0+127)
   450  07FA  01B5               	clrf	(__pbssBANK0+9)& (0+127)
   451  07FB  01B6               	clrf	(__pbssBANK0+10)& (0+127)
   452  07FC                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  07FC                     __end_of__initialization:	
   456  07FC  0183               	clrf	3
   457  07FD  120A  118A  2E58   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssBANK0
   460  002C                     __pbssBANK0:	
   461  002C                     mapeo@F1390:	
   462  002C                     	ds	6
   463  0032                     _voltaje_temp:	
   464  0032                     	ds	1
   465  0033                     _voltaje_map:	
   466  0033                     	ds	1
   467  0034                     _Val_Cont:	
   468  0034                     	ds	1
   469  0035                     _Val_ADC:	
   470  0035                     	ds	1
   471  0036                     _ADC_Temp:	
   472  0036                     	ds	1
   473                           
   474                           	psect	cstackCOMMON
   475  0070                     __pcstackCOMMON:	
   476  0070                     ?_setup:	
   477  0070                     ?_LCD_iniciar:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_LCD_CLEAR:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_LCD_STRING:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_I2C_Master_Start:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ??_I2C_Master_Start:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_I2C_Master_Write:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_I2C_Master_Stop:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ??_I2C_Master_Stop:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_LCD_CHAR:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ??_LCD_CHAR:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_uint_to_char:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_uint_to_char:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_LCD_DATO:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_main:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_I2C_Master_Wait:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_I2C_Master_Wait:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?___bmul:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_I2C_Master_Read:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?___wmul:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0070                     ?___lldiv:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ___bmul@multiplicand:	
   538                           ; 4 bytes @ 0x0
   539                           
   540  0070                     LCD_DATO@var:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     I2C_Master_Write@d:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  0070                     I2C_Master_Read@a:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  0070                     ___wmul@multiplier:	
   550                           ; 2 bytes @ 0x0
   551                           
   552  0070                     ___lldiv@divisor:	
   553                           ; 2 bytes @ 0x0
   554                           
   555                           
   556                           ; 4 bytes @ 0x0
   557  0070                     	ds	1
   558  0071                     ??___bmul:	
   559  0071                     LCD_CHAR@a:	
   560                           ; 1 bytes @ 0x1
   561                           
   562                           
   563                           ; 1 bytes @ 0x1
   564  0071                     	ds	1
   565  0072                     ??_LCD_STRING:	
   566  0072                     ??_I2C_Master_Write:	
   567                           ; 1 bytes @ 0x2
   568                           
   569  0072                     ??_I2C_Master_Read:	
   570                           ; 1 bytes @ 0x2
   571                           
   572  0072                     ??_LCD_DATO:	
   573                           ; 1 bytes @ 0x2
   574                           
   575  0072                     uint_to_char@numero:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  0072                     ___bmul@product:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0072                     LCD_STRING@n:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0072                     ___wmul@multiplicand:	
   585                           ; 2 bytes @ 0x2
   586                           
   587                           
   588                           ; 2 bytes @ 0x2
   589  0072                     	ds	1
   590  0073                     uint_to_char@numChr:	
   591  0073                     ___bmul@multiplier:	
   592                           ; 1 bytes @ 0x3
   593                           
   594                           
   595                           ; 1 bytes @ 0x3
   596  0073                     	ds	1
   597  0074                     ??_LCD_iniciar:	
   598  0074                     ??_LCD_CLEAR:	
   599                           ; 1 bytes @ 0x4
   600                           
   601  0074                     ?_LCD_CURSOR:	
   602                           ; 1 bytes @ 0x4
   603                           
   604  0074                     ??___wmul:	
   605                           ; 1 bytes @ 0x4
   606                           
   607  0074                     LCD_STRING@a:	
   608                           ; 1 bytes @ 0x4
   609                           
   610  0074                     LCD_CURSOR@a:	
   611                           ; 1 bytes @ 0x4
   612                           
   613  0074                     I2C_Master_Read@temp:	
   614                           ; 2 bytes @ 0x4
   615                           
   616  0074                     ___wmul@product:	
   617                           ; 2 bytes @ 0x4
   618                           
   619  0074                     ___lldiv@dividend:	
   620                           ; 2 bytes @ 0x4
   621                           
   622                           
   623                           ; 4 bytes @ 0x4
   624  0074                     	ds	2
   625  0076                     ?_mapeo:	
   626  0076                     mapeo@limPIC:	
   627                           ; 1 bytes @ 0x6
   628                           
   629  0076                     LCD_CURSOR@b:	
   630                           ; 1 bytes @ 0x6
   631                           
   632                           
   633                           ; 2 bytes @ 0x6
   634  0076                     	ds	1
   635  0077                     mapeo@limFisico:	
   636                           
   637                           ; 1 bytes @ 0x7
   638  0077                     	ds	1
   639  0078                     ??_LCD_CURSOR:	
   640  0078                     ??_mapeo:	
   641                           ; 1 bytes @ 0x8
   642                           
   643  0078                     ??___lldiv:	
   644                           ; 1 bytes @ 0x8
   645                           
   646  0078                     LCD_CURSOR@d:	
   647                           ; 1 bytes @ 0x8
   648                           
   649                           
   650                           ; 2 bytes @ 0x8
   651  0078                     	ds	1
   652  0079                     ___lldiv@quotient:	
   653                           
   654                           ; 4 bytes @ 0x9
   655  0079                     	ds	4
   656  007D                     ___lldiv@counter:	
   657                           
   658                           ; 1 bytes @ 0xD
   659  007D                     	ds	1
   660  007E                     ??_setup:	
   661                           
   662                           	psect	cstackBANK0
   663  0020                     __pcstackBANK0:	
   664                           ; 1 bytes @ 0xE
   665                           
   666  0020                     ?_I2C_Master_Init:	
   667  0020                     mapeo@valor:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0020                     I2C_Master_Init@c:	
   671                           ; 1 bytes @ 0x0
   672                           
   673                           
   674                           ; 4 bytes @ 0x0
   675  0020                     	ds	1
   676  0021                     mapeo@result:	
   677                           
   678                           ; 6 bytes @ 0x1
   679  0021                     	ds	3
   680  0024                     ??_I2C_Master_Init:	
   681                           
   682                           ; 1 bytes @ 0x4
   683  0024                     	ds	3
   684  0027                     mapeo@dividendo:	
   685                           
   686                           ; 2 bytes @ 0x7
   687  0027                     	ds	2
   688  0029                     ??_main:	
   689                           
   690                           ; 1 bytes @ 0x9
   691  0029                     	ds	3
   692                           
   693                           	psect	maintext
   694  0658                     __pmaintext:	
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   697 ;;
   698 ;; *************** function _main *****************
   699 ;; Defined at:
   700 ;;		line 62 in file "i2C_Master.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   709 ;; Tracked objects:
   710 ;;		On entry : B00/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0
   716 ;;      Temps:          0       3       0       0       0
   717 ;;      Totals:         0       3       0       0       0
   718 ;;Total ram usage:        3 bytes
   719 ;; Hardware stack levels required when called:    3
   720 ;; This function calls:
   721 ;;		_I2C_Master_Read
   722 ;;		_I2C_Master_Start
   723 ;;		_I2C_Master_Stop
   724 ;;		_I2C_Master_Write
   725 ;;		_LCD_CHAR
   726 ;;		_LCD_CLEAR
   727 ;;		_LCD_CURSOR
   728 ;;		_LCD_STRING
   729 ;;		_LCD_iniciar
   730 ;;		___bmul
   731 ;;		_mapeo
   732 ;;		_setup
   733 ;;		_uint_to_char
   734 ;; This function is called by:
   735 ;;		Startup code after reset
   736 ;; This function uses a non-reentrant model
   737 ;;
   738                           
   739                           
   740                           ;psect for function _main
   741  0658                     _main:	
   742  0658                     l1364:	
   743                           ;incstack = 0
   744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   745                           
   746                           
   747                           ;i2C_Master.c: 63:     setup();
   748  0658  120A  118A  2322  120A  118A  	fcall	_setup
   749                           
   750                           ;i2C_Master.c: 65:     LCD_iniciar();
   751  065D  120A  118A  24A2  120A  118A  	fcall	_LCD_iniciar
   752                           
   753                           ;i2C_Master.c: 66:     LCD_CLEAR();
   754  0662  120A  118A  2308  120A  118A  	fcall	_LCD_CLEAR
   755                           
   756                           ;i2C_Master.c: 67:     LCD_CURSOR(1,1);
   757  0667  3001               	movlw	1
   758  0668  00F4               	movwf	LCD_CURSOR@a
   759  0669  3000               	movlw	0
   760  066A  00F5               	movwf	LCD_CURSOR@a+1
   761  066B  3001               	movlw	1
   762  066C  00F6               	movwf	LCD_CURSOR@b
   763  066D  3000               	movlw	0
   764  066E  00F7               	movwf	LCD_CURSOR@b+1
   765  066F  120A  118A  23AD  120A  118A  	fcall	_LCD_CURSOR
   766  0674                     l1366:	
   767                           
   768                           ;i2C_Master.c: 68:     LCD_STRING ("S1    S2   S3");
   769  0674  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   770  0675  120A  118A  2363  120A  118A  	fcall	_LCD_STRING
   771  067A                     l1368:	
   772                           
   773                           ;i2C_Master.c: 72:         I2C_Master_Start();
   774  067A  120A  118A  22BB  120A  118A  	fcall	_I2C_Master_Start
   775  067F                     l1370:	
   776                           
   777                           ;i2C_Master.c: 73:         I2C_Master_Write(0x51);
   778  067F  3051               	movlw	81
   779  0680  00F0               	movwf	I2C_Master_Write@d
   780  0681  3000               	movlw	0
   781  0682  00F1               	movwf	I2C_Master_Write@d+1
   782  0683  120A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
   783  0688                     l1372:	
   784                           
   785                           ;i2C_Master.c: 74:         Val_ADC = I2C_Master_Read(0);
   786  0688  3000               	movlw	0
   787  0689  00F0               	movwf	I2C_Master_Read@a
   788  068A  00F1               	movwf	I2C_Master_Read@a+1
   789  068B  120A  118A  23D6  120A  118A  	fcall	_I2C_Master_Read
   790  0690  0870               	movf	?_I2C_Master_Read,w
   791  0691  1283               	bcf	3,5	;RP0=0, select bank0
   792  0692  1303               	bcf	3,6	;RP1=0, select bank0
   793  0693  00A9               	movwf	??_main
   794  0694  0829               	movf	??_main,w
   795  0695  00B5               	movwf	_Val_ADC
   796  0696                     l1374:	
   797                           
   798                           ;i2C_Master.c: 75:         I2C_Master_Stop();
   799  0696  120A  118A  22C4  120A  118A  	fcall	_I2C_Master_Stop
   800  069B                     l1376:	
   801                           
   802                           ;i2C_Master.c: 76:         _delay((unsigned long)((10)*(8000000/4000.0)));
   803  069B  301A               	movlw	26
   804  069C  1283               	bcf	3,5	;RP0=0, select bank0
   805  069D  1303               	bcf	3,6	;RP1=0, select bank0
   806  069E  00AA               	movwf	??_main+1
   807  069F  30F7               	movlw	247
   808  06A0  00A9               	movwf	??_main
   809  06A1                     u497:	
   810  06A1  0BA9               	decfsz	??_main,f
   811  06A2  2EA1               	goto	u497
   812  06A3  0BAA               	decfsz	??_main+1,f
   813  06A4  2EA1               	goto	u497
   814  06A5  2EA6               	nop2
   815  06A6                     l1378:	
   816                           
   817                           ;i2C_Master.c: 80:         I2C_Master_Start();
   818  06A6  120A  118A  22BB  120A  118A  	fcall	_I2C_Master_Start
   819  06AB                     l1380:	
   820                           
   821                           ;i2C_Master.c: 81:         I2C_Master_Write(0x61);
   822  06AB  3061               	movlw	97
   823  06AC  00F0               	movwf	I2C_Master_Write@d
   824  06AD  3000               	movlw	0
   825  06AE  00F1               	movwf	I2C_Master_Write@d+1
   826  06AF  120A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
   827  06B4                     l1382:	
   828                           
   829                           ;i2C_Master.c: 82:         PORTD = I2C_Master_Read(0);
   830  06B4  3000               	movlw	0
   831  06B5  00F0               	movwf	I2C_Master_Read@a
   832  06B6  00F1               	movwf	I2C_Master_Read@a+1
   833  06B7  120A  118A  23D6  120A  118A  	fcall	_I2C_Master_Read
   834  06BC  0870               	movf	?_I2C_Master_Read,w
   835  06BD  1283               	bcf	3,5	;RP0=0, select bank0
   836  06BE  1303               	bcf	3,6	;RP1=0, select bank0
   837  06BF  0088               	movwf	8	;volatile
   838  06C0                     l1384:	
   839                           
   840                           ;i2C_Master.c: 83:         I2C_Master_Stop();
   841  06C0  120A  118A  22C4  120A  118A  	fcall	_I2C_Master_Stop
   842  06C5                     l1386:	
   843                           
   844                           ;i2C_Master.c: 84:         _delay((unsigned long)((10)*(8000000/4000.0)));
   845  06C5  301A               	movlw	26
   846  06C6  1283               	bcf	3,5	;RP0=0, select bank0
   847  06C7  1303               	bcf	3,6	;RP1=0, select bank0
   848  06C8  00AA               	movwf	??_main+1
   849  06C9  30F7               	movlw	247
   850  06CA  00A9               	movwf	??_main
   851  06CB                     u507:	
   852  06CB  0BA9               	decfsz	??_main,f
   853  06CC  2ECB               	goto	u507
   854  06CD  0BAA               	decfsz	??_main+1,f
   855  06CE  2ECB               	goto	u507
   856  06CF  2ED0               	nop2
   857  06D0                     l1388:	
   858                           
   859                           ;i2C_Master.c: 86:         Val_Cont = PORTD;
   860  06D0  1283               	bcf	3,5	;RP0=0, select bank0
   861  06D1  1303               	bcf	3,6	;RP1=0, select bank0
   862  06D2  0808               	movf	8,w	;volatile
   863  06D3  00A9               	movwf	??_main
   864  06D4  0829               	movf	??_main,w
   865  06D5  00B4               	movwf	_Val_Cont
   866  06D6                     l1390:	
   867                           
   868                           ;i2C_Master.c: 88:         I2C_Master_Start();
   869  06D6  120A  118A  22BB  120A  118A  	fcall	_I2C_Master_Start
   870  06DB                     l1392:	
   871                           
   872                           ;i2C_Master.c: 89:         I2C_Master_Write(0x71);
   873  06DB  3071               	movlw	113
   874  06DC  00F0               	movwf	I2C_Master_Write@d
   875  06DD  3000               	movlw	0
   876  06DE  00F1               	movwf	I2C_Master_Write@d+1
   877  06DF  120A  118A  22CD  120A  118A  	fcall	_I2C_Master_Write
   878  06E4                     l1394:	
   879                           
   880                           ;i2C_Master.c: 90:         ADC_Temp = I2C_Master_Read(0);
   881  06E4  3000               	movlw	0
   882  06E5  00F0               	movwf	I2C_Master_Read@a
   883  06E6  00F1               	movwf	I2C_Master_Read@a+1
   884  06E7  120A  118A  23D6  120A  118A  	fcall	_I2C_Master_Read
   885  06EC  0870               	movf	?_I2C_Master_Read,w
   886  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   887  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   888  06EF  00A9               	movwf	??_main
   889  06F0  0829               	movf	??_main,w
   890  06F1  00B6               	movwf	_ADC_Temp
   891  06F2                     l1396:	
   892                           
   893                           ;i2C_Master.c: 91:         I2C_Master_Stop();
   894  06F2  120A  118A  22C4  120A  118A  	fcall	_I2C_Master_Stop
   895  06F7                     l1398:	
   896                           
   897                           ;i2C_Master.c: 92:         _delay((unsigned long)((10)*(8000000/4000.0)));
   898  06F7  301A               	movlw	26
   899  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   900  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   901  06FA  00AA               	movwf	??_main+1
   902  06FB  30F7               	movlw	247
   903  06FC  00A9               	movwf	??_main
   904  06FD                     u517:	
   905  06FD  0BA9               	decfsz	??_main,f
   906  06FE  2EFD               	goto	u517
   907  06FF  0BAA               	decfsz	??_main+1,f
   908  0700  2EFD               	goto	u517
   909  0701  2F02               	nop2
   910  0702                     l1400:	
   911                           
   912                           ;i2C_Master.c: 94:         ADC_Temp = ADC_Temp*10;
   913  0702  300A               	movlw	10
   914  0703  1283               	bcf	3,5	;RP0=0, select bank0
   915  0704  1303               	bcf	3,6	;RP1=0, select bank0
   916  0705  00A9               	movwf	??_main
   917  0706  0829               	movf	??_main,w
   918  0707  00F0               	movwf	___bmul@multiplicand
   919  0708  0836               	movf	_ADC_Temp,w
   920  0709  120A  118A  22F3  120A  118A  	fcall	___bmul
   921  070E  1283               	bcf	3,5	;RP0=0, select bank0
   922  070F  1303               	bcf	3,6	;RP1=0, select bank0
   923  0710  00AA               	movwf	??_main+1
   924  0711  082A               	movf	??_main+1,w
   925  0712  00B6               	movwf	_ADC_Temp
   926  0713                     l1402:	
   927                           
   928                           ;i2C_Master.c: 97:         voltaje_map = mapeo(Val_ADC, 255, 5);
   929  0713  30FF               	movlw	255
   930  0714  00A9               	movwf	??_main
   931  0715  0829               	movf	??_main,w
   932  0716  00F6               	movwf	mapeo@limPIC
   933  0717  3005               	movlw	5
   934  0718  00AA               	movwf	??_main+1
   935  0719  082A               	movf	??_main+1,w
   936  071A  00F7               	movwf	mapeo@limFisico
   937  071B  0835               	movf	_Val_ADC,w
   938  071C  120A  118A  25B4  120A  118A  	fcall	_mapeo
   939  0721  1283               	bcf	3,5	;RP0=0, select bank0
   940  0722  1303               	bcf	3,6	;RP1=0, select bank0
   941  0723  00AB               	movwf	??_main+2
   942  0724  082B               	movf	??_main+2,w
   943  0725  00B3               	movwf	_voltaje_map
   944  0726                     l1404:	
   945                           
   946                           ;i2C_Master.c: 98:         LCD_CURSOR(2,1);
   947  0726  3002               	movlw	2
   948  0727  00F4               	movwf	LCD_CURSOR@a
   949  0728  3000               	movlw	0
   950  0729  00F5               	movwf	LCD_CURSOR@a+1
   951  072A  3001               	movlw	1
   952  072B  00F6               	movwf	LCD_CURSOR@b
   953  072C  3000               	movlw	0
   954  072D  00F7               	movwf	LCD_CURSOR@b+1
   955  072E  120A  118A  23AD  120A  118A  	fcall	_LCD_CURSOR
   956  0733                     l1406:	
   957                           
   958                           ;i2C_Master.c: 99:         LCD_CHAR(uint_to_char(voltaje_map[0]));
   959  0733  1283               	bcf	3,5	;RP0=0, select bank0
   960  0734  1303               	bcf	3,6	;RP1=0, select bank0
   961  0735  0833               	movf	_voltaje_map,w
   962  0736  0084               	movwf	4
   963  0737  1383               	bcf	3,7	;select IRP bank0
   964  0738  0800               	movf	0,w
   965  0739  120A  118A  2521  120A  118A  	fcall	_uint_to_char
   966  073E  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
   967  0743                     l1408:	
   968                           
   969                           ;i2C_Master.c: 100:         LCD_CHAR('.');
   970  0743  302E               	movlw	46
   971  0744  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
   972  0749                     l1410:	
   973                           
   974                           ;i2C_Master.c: 101:         LCD_CHAR(uint_to_char(voltaje_map[1]));
   975  0749  1283               	bcf	3,5	;RP0=0, select bank0
   976  074A  1303               	bcf	3,6	;RP1=0, select bank0
   977  074B  0833               	movf	_voltaje_map,w
   978  074C  3E02               	addlw	2
   979  074D  0084               	movwf	4
   980  074E  1383               	bcf	3,7	;select IRP bank0
   981  074F  0800               	movf	0,w
   982  0750  120A  118A  2521  120A  118A  	fcall	_uint_to_char
   983  0755  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
   984  075A                     l1412:	
   985                           
   986                           ;i2C_Master.c: 102:         LCD_CHAR(uint_to_char(voltaje_map[2]));
   987  075A  1283               	bcf	3,5	;RP0=0, select bank0
   988  075B  1303               	bcf	3,6	;RP1=0, select bank0
   989  075C  0833               	movf	_voltaje_map,w
   990  075D  3E04               	addlw	4
   991  075E  0084               	movwf	4
   992  075F  1383               	bcf	3,7	;select IRP bank0
   993  0760  0800               	movf	0,w
   994  0761  120A  118A  2521  120A  118A  	fcall	_uint_to_char
   995  0766  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
   996  076B                     l1414:	
   997                           
   998                           ;i2C_Master.c: 103:         LCD_CHAR('V');
   999  076B  3056               	movlw	86
  1000  076C  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1001  0771                     l1416:	
  1002                           
  1003                           ;i2C_Master.c: 105:         LCD_CURSOR(2,7);
  1004  0771  3002               	movlw	2
  1005  0772  00F4               	movwf	LCD_CURSOR@a
  1006  0773  3000               	movlw	0
  1007  0774  00F5               	movwf	LCD_CURSOR@a+1
  1008  0775  3007               	movlw	7
  1009  0776  00F6               	movwf	LCD_CURSOR@b
  1010  0777  3000               	movlw	0
  1011  0778  00F7               	movwf	LCD_CURSOR@b+1
  1012  0779  120A  118A  23AD  120A  118A  	fcall	_LCD_CURSOR
  1013  077E                     l1418:	
  1014                           
  1015                           ;i2C_Master.c: 106:         LCD_CHAR(uint_to_char(Val_Cont));
  1016  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1017  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0780  0834               	movf	_Val_Cont,w
  1019  0781  120A  118A  2521  120A  118A  	fcall	_uint_to_char
  1020  0786  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1021  078B                     l1420:	
  1022                           
  1023                           ;i2C_Master.c: 109:         voltaje_temp = mapeo(ADC_Temp, 255, 5);
  1024  078B  30FF               	movlw	255
  1025  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1026  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1027  078E  00A9               	movwf	??_main
  1028  078F  0829               	movf	??_main,w
  1029  0790  00F6               	movwf	mapeo@limPIC
  1030  0791  3005               	movlw	5
  1031  0792  00AA               	movwf	??_main+1
  1032  0793  082A               	movf	??_main+1,w
  1033  0794  00F7               	movwf	mapeo@limFisico
  1034  0795  0836               	movf	_ADC_Temp,w
  1035  0796  120A  118A  25B4  120A  118A  	fcall	_mapeo
  1036  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1037  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1038  079D  00AB               	movwf	??_main+2
  1039  079E  082B               	movf	??_main+2,w
  1040  079F  00B2               	movwf	_voltaje_temp
  1041  07A0                     l1422:	
  1042                           
  1043                           ;i2C_Master.c: 110:         LCD_CURSOR(2,12);
  1044  07A0  3002               	movlw	2
  1045  07A1  00F4               	movwf	LCD_CURSOR@a
  1046  07A2  3000               	movlw	0
  1047  07A3  00F5               	movwf	LCD_CURSOR@a+1
  1048  07A4  300C               	movlw	12
  1049  07A5  00F6               	movwf	LCD_CURSOR@b
  1050  07A6  3000               	movlw	0
  1051  07A7  00F7               	movwf	LCD_CURSOR@b+1
  1052  07A8  120A  118A  23AD  120A  118A  	fcall	_LCD_CURSOR
  1053  07AD                     l1424:	
  1054                           
  1055                           ;i2C_Master.c: 111:         LCD_CHAR(uint_to_char(voltaje_temp[0]));
  1056  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1057  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1058  07AF  0832               	movf	_voltaje_temp,w
  1059  07B0  0084               	movwf	4
  1060  07B1  1383               	bcf	3,7	;select IRP bank0
  1061  07B2  0800               	movf	0,w
  1062  07B3  120A  118A  2521  120A  118A  	fcall	_uint_to_char
  1063  07B8  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1064  07BD                     l1426:	
  1065                           
  1066                           ;i2C_Master.c: 112:         LCD_CHAR(uint_to_char(voltaje_temp[1]));
  1067  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1068  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1069  07BF  0832               	movf	_voltaje_temp,w
  1070  07C0  3E02               	addlw	2
  1071  07C1  0084               	movwf	4
  1072  07C2  1383               	bcf	3,7	;select IRP bank0
  1073  07C3  0800               	movf	0,w
  1074  07C4  120A  118A  2521  120A  118A  	fcall	_uint_to_char
  1075  07C9  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1076  07CE                     l1428:	
  1077                           
  1078                           ;i2C_Master.c: 113:         LCD_CHAR('.');
  1079  07CE  302E               	movlw	46
  1080  07CF  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1081                           
  1082                           ;i2C_Master.c: 114:         LCD_CHAR(uint_to_char(voltaje_temp[2]));
  1083  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1084  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1085  07D6  0832               	movf	_voltaje_temp,w
  1086  07D7  3E04               	addlw	4
  1087  07D8  0084               	movwf	4
  1088  07D9  1383               	bcf	3,7	;select IRP bank0
  1089  07DA  0800               	movf	0,w
  1090  07DB  120A  118A  2521  120A  118A  	fcall	_uint_to_char
  1091  07E0  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1092  07E5                     l1430:	
  1093                           
  1094                           ;i2C_Master.c: 115:         LCD_CHAR('C');
  1095  07E5  3043               	movlw	67
  1096  07E6  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  1097  07EB  2E7A               	goto	l1368
  1098  07EC  120A  118A  2800   	ljmp	start
  1099  07EF                     __end_of_main:	
  1100                           
  1101                           	psect	text1
  1102  0521                     __ptext1:	
  1103 ;; *************** function _uint_to_char *****************
  1104 ;; Defined at:
  1105 ;;		line 97 in file "Lib_LCD.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  numero          1    wreg     unsigned char 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  numero          1    2[COMMON] unsigned char 
  1110 ;;  numChr          1    3[COMMON] unsigned char 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  1    wreg      unsigned char 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         0       0       0       0       0
  1121 ;;      Locals:         2       0       0       0       0
  1122 ;;      Temps:          2       0       0       0       0
  1123 ;;      Totals:         4       0       0       0       0
  1124 ;;Total ram usage:        4 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _uint_to_char
  1135  0521                     _uint_to_char:	
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _uint_to_char: [wreg-fsr0h+status,2+status,0]
  1139                           ;uint_to_char@numero stored from wreg
  1140  0521  00F2               	movwf	uint_to_char@numero
  1141  0522                     l1304:	
  1142                           
  1143                           ;Lib_LCD.c: 99:     switch (numero){
  1144  0522  2D78               	goto	l1340
  1145  0523                     l1306:	
  1146                           
  1147                           ;Lib_LCD.c: 101:             numChr = 48;
  1148  0523  3030               	movlw	48
  1149  0524  00F0               	movwf	??_uint_to_char
  1150  0525  0870               	movf	??_uint_to_char,w
  1151  0526  00F3               	movwf	uint_to_char@numChr
  1152                           
  1153                           ;Lib_LCD.c: 102:             break;
  1154  0527  2DB2               	goto	l1342
  1155  0528                     l1308:	
  1156                           
  1157                           ;Lib_LCD.c: 104:             numChr = 49;
  1158  0528  3031               	movlw	49
  1159  0529  00F0               	movwf	??_uint_to_char
  1160  052A  0870               	movf	??_uint_to_char,w
  1161  052B  00F3               	movwf	uint_to_char@numChr
  1162                           
  1163                           ;Lib_LCD.c: 105:             break;
  1164  052C  2DB2               	goto	l1342
  1165  052D                     l1310:	
  1166                           
  1167                           ;Lib_LCD.c: 107:             numChr = 50;
  1168  052D  3032               	movlw	50
  1169  052E  00F0               	movwf	??_uint_to_char
  1170  052F  0870               	movf	??_uint_to_char,w
  1171  0530  00F3               	movwf	uint_to_char@numChr
  1172                           
  1173                           ;Lib_LCD.c: 108:             break;
  1174  0531  2DB2               	goto	l1342
  1175  0532                     l1312:	
  1176                           
  1177                           ;Lib_LCD.c: 110:             numChr = 51;
  1178  0532  3033               	movlw	51
  1179  0533  00F0               	movwf	??_uint_to_char
  1180  0534  0870               	movf	??_uint_to_char,w
  1181  0535  00F3               	movwf	uint_to_char@numChr
  1182                           
  1183                           ;Lib_LCD.c: 111:             break;
  1184  0536  2DB2               	goto	l1342
  1185  0537                     l1314:	
  1186                           
  1187                           ;Lib_LCD.c: 113:             numChr = 52;
  1188  0537  3034               	movlw	52
  1189  0538  00F0               	movwf	??_uint_to_char
  1190  0539  0870               	movf	??_uint_to_char,w
  1191  053A  00F3               	movwf	uint_to_char@numChr
  1192                           
  1193                           ;Lib_LCD.c: 114:             break;
  1194  053B  2DB2               	goto	l1342
  1195  053C                     l1316:	
  1196                           
  1197                           ;Lib_LCD.c: 116:             numChr = 53;
  1198  053C  3035               	movlw	53
  1199  053D  00F0               	movwf	??_uint_to_char
  1200  053E  0870               	movf	??_uint_to_char,w
  1201  053F  00F3               	movwf	uint_to_char@numChr
  1202                           
  1203                           ;Lib_LCD.c: 117:             break;
  1204  0540  2DB2               	goto	l1342
  1205  0541                     l1318:	
  1206                           
  1207                           ;Lib_LCD.c: 119:             numChr = 54;
  1208  0541  3036               	movlw	54
  1209  0542  00F0               	movwf	??_uint_to_char
  1210  0543  0870               	movf	??_uint_to_char,w
  1211  0544  00F3               	movwf	uint_to_char@numChr
  1212                           
  1213                           ;Lib_LCD.c: 120:             break;
  1214  0545  2DB2               	goto	l1342
  1215  0546                     l1320:	
  1216                           
  1217                           ;Lib_LCD.c: 122:             numChr = 55;
  1218  0546  3037               	movlw	55
  1219  0547  00F0               	movwf	??_uint_to_char
  1220  0548  0870               	movf	??_uint_to_char,w
  1221  0549  00F3               	movwf	uint_to_char@numChr
  1222                           
  1223                           ;Lib_LCD.c: 123:             break;
  1224  054A  2DB2               	goto	l1342
  1225  054B                     l1322:	
  1226                           
  1227                           ;Lib_LCD.c: 125:             numChr = 56;
  1228  054B  3038               	movlw	56
  1229  054C  00F0               	movwf	??_uint_to_char
  1230  054D  0870               	movf	??_uint_to_char,w
  1231  054E  00F3               	movwf	uint_to_char@numChr
  1232                           
  1233                           ;Lib_LCD.c: 126:             break;
  1234  054F  2DB2               	goto	l1342
  1235  0550                     l1324:	
  1236                           
  1237                           ;Lib_LCD.c: 128:             numChr = 57;
  1238  0550  3039               	movlw	57
  1239  0551  00F0               	movwf	??_uint_to_char
  1240  0552  0870               	movf	??_uint_to_char,w
  1241  0553  00F3               	movwf	uint_to_char@numChr
  1242                           
  1243                           ;Lib_LCD.c: 129:             break;
  1244  0554  2DB2               	goto	l1342
  1245  0555                     l1326:	
  1246                           
  1247                           ;Lib_LCD.c: 131:             numChr = 65;
  1248  0555  3041               	movlw	65
  1249  0556  00F0               	movwf	??_uint_to_char
  1250  0557  0870               	movf	??_uint_to_char,w
  1251  0558  00F3               	movwf	uint_to_char@numChr
  1252                           
  1253                           ;Lib_LCD.c: 132:             break;
  1254  0559  2DB2               	goto	l1342
  1255  055A                     l1328:	
  1256                           
  1257                           ;Lib_LCD.c: 134:             numChr = 66;
  1258  055A  3042               	movlw	66
  1259  055B  00F0               	movwf	??_uint_to_char
  1260  055C  0870               	movf	??_uint_to_char,w
  1261  055D  00F3               	movwf	uint_to_char@numChr
  1262                           
  1263                           ;Lib_LCD.c: 135:             break;
  1264  055E  2DB2               	goto	l1342
  1265  055F                     l1330:	
  1266                           
  1267                           ;Lib_LCD.c: 137:             numChr = 67;
  1268  055F  3043               	movlw	67
  1269  0560  00F0               	movwf	??_uint_to_char
  1270  0561  0870               	movf	??_uint_to_char,w
  1271  0562  00F3               	movwf	uint_to_char@numChr
  1272                           
  1273                           ;Lib_LCD.c: 138:             break;
  1274  0563  2DB2               	goto	l1342
  1275  0564                     l1332:	
  1276                           
  1277                           ;Lib_LCD.c: 140:             numChr = 68;
  1278  0564  3044               	movlw	68
  1279  0565  00F0               	movwf	??_uint_to_char
  1280  0566  0870               	movf	??_uint_to_char,w
  1281  0567  00F3               	movwf	uint_to_char@numChr
  1282                           
  1283                           ;Lib_LCD.c: 141:             break;
  1284  0568  2DB2               	goto	l1342
  1285  0569                     l1334:	
  1286                           
  1287                           ;Lib_LCD.c: 143:             numChr = 69;
  1288  0569  3045               	movlw	69
  1289  056A  00F0               	movwf	??_uint_to_char
  1290  056B  0870               	movf	??_uint_to_char,w
  1291  056C  00F3               	movwf	uint_to_char@numChr
  1292                           
  1293                           ;Lib_LCD.c: 144:             break;
  1294  056D  2DB2               	goto	l1342
  1295  056E                     l1336:	
  1296                           
  1297                           ;Lib_LCD.c: 146:             numChr = 70;
  1298  056E  3046               	movlw	70
  1299  056F  00F0               	movwf	??_uint_to_char
  1300  0570  0870               	movf	??_uint_to_char,w
  1301  0571  00F3               	movwf	uint_to_char@numChr
  1302                           
  1303                           ;Lib_LCD.c: 147:             break;
  1304  0572  2DB2               	goto	l1342
  1305  0573                     l1338:	
  1306                           
  1307                           ;Lib_LCD.c: 149:             numChr = 214;
  1308  0573  30D6               	movlw	214
  1309  0574  00F0               	movwf	??_uint_to_char
  1310  0575  0870               	movf	??_uint_to_char,w
  1311  0576  00F3               	movwf	uint_to_char@numChr
  1312                           
  1313                           ;Lib_LCD.c: 150:     }
  1314  0577  2DB2               	goto	l1342
  1315  0578                     l1340:	
  1316  0578  0872               	movf	uint_to_char@numero,w
  1317  0579  00F0               	movwf	??_uint_to_char
  1318  057A  01F1               	clrf	??_uint_to_char+1
  1319                           
  1320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1321                           ; Switch size 1, requested type "simple"
  1322                           ; Number of cases is 1, Range of values is 0 to 0
  1323                           ; switch strategies available:
  1324                           ; Name         Instructions Cycles
  1325                           ; simple_byte            4     3 (average)
  1326                           ; direct_byte           11     8 (fixed)
  1327                           ; jumptable            260     6 (fixed)
  1328                           ;	Chosen strategy is simple_byte
  1329  057B  0871               	movf	??_uint_to_char+1,w
  1330  057C  3A00               	xorlw	0	; case 0
  1331  057D  1903               	skipnz
  1332  057E  2D80               	goto	l1456
  1333  057F  2D73               	goto	l1338
  1334  0580                     l1456:	
  1335                           
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 16, Range of values is 0 to 15
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte           49    25 (average)
  1341                           ; direct_byte           56     8 (fixed)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ;	Chosen strategy is simple_byte
  1344  0580  0870               	movf	??_uint_to_char,w
  1345  0581  3A00               	xorlw	0	; case 0
  1346  0582  1903               	skipnz
  1347  0583  2D23               	goto	l1306
  1348  0584  3A01               	xorlw	1	; case 1
  1349  0585  1903               	skipnz
  1350  0586  2D28               	goto	l1308
  1351  0587  3A03               	xorlw	3	; case 2
  1352  0588  1903               	skipnz
  1353  0589  2D2D               	goto	l1310
  1354  058A  3A01               	xorlw	1	; case 3
  1355  058B  1903               	skipnz
  1356  058C  2D32               	goto	l1312
  1357  058D  3A07               	xorlw	7	; case 4
  1358  058E  1903               	skipnz
  1359  058F  2D37               	goto	l1314
  1360  0590  3A01               	xorlw	1	; case 5
  1361  0591  1903               	skipnz
  1362  0592  2D3C               	goto	l1316
  1363  0593  3A03               	xorlw	3	; case 6
  1364  0594  1903               	skipnz
  1365  0595  2D41               	goto	l1318
  1366  0596  3A01               	xorlw	1	; case 7
  1367  0597  1903               	skipnz
  1368  0598  2D46               	goto	l1320
  1369  0599  3A0F               	xorlw	15	; case 8
  1370  059A  1903               	skipnz
  1371  059B  2D4B               	goto	l1322
  1372  059C  3A01               	xorlw	1	; case 9
  1373  059D  1903               	skipnz
  1374  059E  2D50               	goto	l1324
  1375  059F  3A03               	xorlw	3	; case 10
  1376  05A0  1903               	skipnz
  1377  05A1  2D55               	goto	l1326
  1378  05A2  3A01               	xorlw	1	; case 11
  1379  05A3  1903               	skipnz
  1380  05A4  2D5A               	goto	l1328
  1381  05A5  3A07               	xorlw	7	; case 12
  1382  05A6  1903               	skipnz
  1383  05A7  2D5F               	goto	l1330
  1384  05A8  3A01               	xorlw	1	; case 13
  1385  05A9  1903               	skipnz
  1386  05AA  2D64               	goto	l1332
  1387  05AB  3A03               	xorlw	3	; case 14
  1388  05AC  1903               	skipnz
  1389  05AD  2D69               	goto	l1334
  1390  05AE  3A01               	xorlw	1	; case 15
  1391  05AF  1903               	skipnz
  1392  05B0  2D6E               	goto	l1336
  1393  05B1  2D73               	goto	l1338
  1394  05B2                     l1342:	
  1395                           
  1396                           ;Lib_LCD.c: 151:     return(numChr);
  1397  05B2  0873               	movf	uint_to_char@numChr,w
  1398  05B3                     l135:	
  1399  05B3  0008               	return
  1400  05B4                     __end_of_uint_to_char:	
  1401                           
  1402                           	psect	text2
  1403  0322                     __ptext2:	
  1404 ;; *************** function _setup *****************
  1405 ;; Defined at:
  1406 ;;		line 124 in file "i2C_Master.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;		None
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, status,2, status,0, pclath, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1420 ;;      Params:         0       0       0       0       0
  1421 ;;      Locals:         0       0       0       0       0
  1422 ;;      Temps:          0       0       0       0       0
  1423 ;;      Totals:         0       0       0       0       0
  1424 ;;Total ram usage:        0 bytes
  1425 ;; Hardware stack levels used:    1
  1426 ;; Hardware stack levels required when called:    2
  1427 ;; This function calls:
  1428 ;;		_I2C_Master_Init
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           
  1435                           ;psect for function _setup
  1436  0322                     _setup:	
  1437  0322                     l1196:	
  1438                           ;incstack = 0
  1439                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1440                           
  1441                           
  1442                           ;i2C_Master.c: 125:     ANSEL = 0;
  1443  0322  1683               	bsf	3,5	;RP0=1, select bank3
  1444  0323  1703               	bsf	3,6	;RP1=1, select bank3
  1445  0324  0188               	clrf	8	;volatile
  1446                           
  1447                           ;i2C_Master.c: 126:     ANSELH = 0;
  1448  0325  0189               	clrf	9	;volatile
  1449  0326                     l1198:	
  1450                           
  1451                           ;i2C_Master.c: 128:     TRISAbits.TRISA3 = 0;
  1452  0326  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0327  1303               	bcf	3,6	;RP1=0, select bank1
  1454  0328  1185               	bcf	5,3	;volatile
  1455  0329                     l1200:	
  1456                           
  1457                           ;i2C_Master.c: 129:     TRISAbits.TRISA4 = 0;
  1458  0329  1205               	bcf	5,4	;volatile
  1459                           
  1460                           ;i2C_Master.c: 130:     TRISB = 0;
  1461  032A  0186               	clrf	6	;volatile
  1462                           
  1463                           ;i2C_Master.c: 131:     TRISD = 0;
  1464  032B  0188               	clrf	8	;volatile
  1465                           
  1466                           ;i2C_Master.c: 134:     PORTA = 0;
  1467  032C  1283               	bcf	3,5	;RP0=0, select bank0
  1468  032D  1303               	bcf	3,6	;RP1=0, select bank0
  1469  032E  0185               	clrf	5	;volatile
  1470                           
  1471                           ;i2C_Master.c: 135:     PORTB = 0;
  1472  032F  0186               	clrf	6	;volatile
  1473                           
  1474                           ;i2C_Master.c: 136:     PORTD = 0;
  1475  0330  0188               	clrf	8	;volatile
  1476  0331                     l1202:	
  1477                           
  1478                           ;i2C_Master.c: 138:     I2C_Master_Init(100000);
  1479  0331  3000               	movlw	0
  1480  0332  00A3               	movwf	I2C_Master_Init@c+3
  1481  0333  3001               	movlw	1
  1482  0334  00A2               	movwf	I2C_Master_Init@c+2
  1483  0335  3086               	movlw	134
  1484  0336  00A1               	movwf	I2C_Master_Init@c+1
  1485  0337  30A0               	movlw	160
  1486  0338  00A0               	movwf	I2C_Master_Init@c
  1487  0339  120A  118A  2404  120A  118A  	fcall	_I2C_Master_Init
  1488  033E                     l65:	
  1489  033E  0008               	return
  1490  033F                     __end_of_setup:	
  1491                           
  1492                           	psect	text3
  1493  0404                     __ptext3:	
  1494 ;; *************** function _I2C_Master_Init *****************
  1495 ;; Defined at:
  1496 ;;		line 16 in file "I2C.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  c               4    0[BANK0 ] const unsigned long 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       4       0       0       0
  1511 ;;      Locals:         0       0       0       0       0
  1512 ;;      Temps:          0       4       0       0       0
  1513 ;;      Totals:         0       8       0       0       0
  1514 ;;Total ram usage:        8 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		___lldiv
  1519 ;; This function is called by:
  1520 ;;		_setup
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _I2C_Master_Init
  1526  0404                     _I2C_Master_Init:	
  1527  0404                     l1158:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1530                           
  1531                           
  1532                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1533  0404  3028               	movlw	40
  1534  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0407  0094               	movwf	20	;volatile
  1537  0408                     l1160:	
  1538                           
  1539                           ;I2C.c: 19:     SSPCON2 = 0;
  1540  0408  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0409  1303               	bcf	3,6	;RP1=0, select bank1
  1542  040A  0191               	clrf	17	;volatile
  1543  040B                     l1162:	
  1544                           
  1545                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1546  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1547  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1548  040D  0820               	movf	I2C_Master_Init@c,w
  1549  040E  00A4               	movwf	??_I2C_Master_Init
  1550  040F  0821               	movf	I2C_Master_Init@c+1,w
  1551  0410  00A5               	movwf	??_I2C_Master_Init+1
  1552  0411  0822               	movf	I2C_Master_Init@c+2,w
  1553  0412  00A6               	movwf	??_I2C_Master_Init+2
  1554  0413  0823               	movf	I2C_Master_Init@c+3,w
  1555  0414  00A7               	movwf	??_I2C_Master_Init+3
  1556  0415  3002               	movlw	2
  1557  0416                     u325:	
  1558  0416  1003               	clrc
  1559  0417  0DA4               	rlf	??_I2C_Master_Init,f
  1560  0418  0DA5               	rlf	??_I2C_Master_Init+1,f
  1561  0419  0DA6               	rlf	??_I2C_Master_Init+2,f
  1562  041A  0DA7               	rlf	??_I2C_Master_Init+3,f
  1563  041B                     u320:	
  1564  041B  3EFF               	addlw	-1
  1565  041C  1D03               	skipz
  1566  041D  2C16               	goto	u325
  1567  041E  0827               	movf	??_I2C_Master_Init+3,w
  1568  041F  00F3               	movwf	___lldiv@divisor+3
  1569  0420  0826               	movf	??_I2C_Master_Init+2,w
  1570  0421  00F2               	movwf	___lldiv@divisor+2
  1571  0422  0825               	movf	??_I2C_Master_Init+1,w
  1572  0423  00F1               	movwf	___lldiv@divisor+1
  1573  0424  0824               	movf	??_I2C_Master_Init,w
  1574  0425  00F0               	movwf	___lldiv@divisor
  1575  0426  3000               	movlw	0
  1576  0427  00F7               	movwf	___lldiv@dividend+3
  1577  0428  307A               	movlw	122
  1578  0429  00F6               	movwf	___lldiv@dividend+2
  1579  042A  3012               	movlw	18
  1580  042B  00F5               	movwf	___lldiv@dividend+1
  1581  042C  3000               	movlw	0
  1582  042D  00F4               	movwf	___lldiv@dividend
  1583  042E  120A  118A  243C  120A  118A  	fcall	___lldiv
  1584  0433  0870               	movf	?___lldiv,w
  1585  0434  3EFF               	addlw	255
  1586  0435  1683               	bsf	3,5	;RP0=1, select bank1
  1587  0436  1303               	bcf	3,6	;RP1=0, select bank1
  1588  0437  0093               	movwf	19	;volatile
  1589  0438                     l1164:	
  1590                           
  1591                           ;I2C.c: 21:     SSPSTAT = 0;
  1592  0438  0194               	clrf	20	;volatile
  1593  0439                     l1166:	
  1594                           
  1595                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1596  0439  1587               	bsf	7,3	;volatile
  1597  043A                     l1168:	
  1598                           
  1599                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1600  043A  1607               	bsf	7,4	;volatile
  1601  043B                     l164:	
  1602  043B  0008               	return
  1603  043C                     __end_of_I2C_Master_Init:	
  1604                           
  1605                           	psect	text4
  1606  043C                     __ptext4:	
  1607 ;; *************** function ___lldiv *****************
  1608 ;; Defined at:
  1609 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  divisor         4    0[COMMON] unsigned long 
  1612 ;;  dividend        4    4[COMMON] unsigned long 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  quotient        4    9[COMMON] unsigned long 
  1615 ;;  counter         1   13[COMMON] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  4    0[COMMON] unsigned long 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2, status,0
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         8       0       0       0       0
  1626 ;;      Locals:         5       0       0       0       0
  1627 ;;      Temps:          1       0       0       0       0
  1628 ;;      Totals:        14       0       0       0       0
  1629 ;;Total ram usage:       14 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_I2C_Master_Init
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function ___lldiv
  1640  043C                     ___lldiv:	
  1641  043C                     l1126:	
  1642                           ;incstack = 0
  1643                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1644                           
  1645  043C  3000               	movlw	0
  1646  043D  00FC               	movwf	___lldiv@quotient+3
  1647  043E  3000               	movlw	0
  1648  043F  00FB               	movwf	___lldiv@quotient+2
  1649  0440  3000               	movlw	0
  1650  0441  00FA               	movwf	___lldiv@quotient+1
  1651  0442  3000               	movlw	0
  1652  0443  00F9               	movwf	___lldiv@quotient
  1653  0444  0873               	movf	___lldiv@divisor+3,w
  1654  0445  0472               	iorwf	___lldiv@divisor+2,w
  1655  0446  0471               	iorwf	___lldiv@divisor+1,w
  1656  0447  0470               	iorwf	___lldiv@divisor,w
  1657  0448  1903               	skipnz
  1658  0449  2C4B               	goto	u251
  1659  044A  2C4C               	goto	u250
  1660  044B                     u251:	
  1661  044B  2C99               	goto	l1146
  1662  044C                     u250:	
  1663  044C                     l1128:	
  1664  044C  01FD               	clrf	___lldiv@counter
  1665  044D  0AFD               	incf	___lldiv@counter,f
  1666  044E  2C5C               	goto	l1132
  1667  044F                     l1130:	
  1668  044F  3001               	movlw	1
  1669  0450  00F8               	movwf	??___lldiv
  1670  0451                     u265:	
  1671  0451  1003               	clrc
  1672  0452  0DF0               	rlf	___lldiv@divisor,f
  1673  0453  0DF1               	rlf	___lldiv@divisor+1,f
  1674  0454  0DF2               	rlf	___lldiv@divisor+2,f
  1675  0455  0DF3               	rlf	___lldiv@divisor+3,f
  1676  0456  0BF8               	decfsz	??___lldiv,f
  1677  0457  2C51               	goto	u265
  1678  0458  3001               	movlw	1
  1679  0459  00F8               	movwf	??___lldiv
  1680  045A  0878               	movf	??___lldiv,w
  1681  045B  07FD               	addwf	___lldiv@counter,f
  1682  045C                     l1132:	
  1683  045C  1FF3               	btfss	___lldiv@divisor+3,7
  1684  045D  2C5F               	goto	u271
  1685  045E  2C60               	goto	u270
  1686  045F                     u271:	
  1687  045F  2C4F               	goto	l1130
  1688  0460                     u270:	
  1689  0460                     l1134:	
  1690  0460  3001               	movlw	1
  1691  0461  00F8               	movwf	??___lldiv
  1692  0462                     u285:	
  1693  0462  1003               	clrc
  1694  0463  0DF9               	rlf	___lldiv@quotient,f
  1695  0464  0DFA               	rlf	___lldiv@quotient+1,f
  1696  0465  0DFB               	rlf	___lldiv@quotient+2,f
  1697  0466  0DFC               	rlf	___lldiv@quotient+3,f
  1698  0467  0BF8               	decfsz	??___lldiv,f
  1699  0468  2C62               	goto	u285
  1700  0469                     l1136:	
  1701  0469  0873               	movf	___lldiv@divisor+3,w
  1702  046A  0277               	subwf	___lldiv@dividend+3,w
  1703  046B  1D03               	skipz
  1704  046C  2C77               	goto	u295
  1705  046D  0872               	movf	___lldiv@divisor+2,w
  1706  046E  0276               	subwf	___lldiv@dividend+2,w
  1707  046F  1D03               	skipz
  1708  0470  2C77               	goto	u295
  1709  0471  0871               	movf	___lldiv@divisor+1,w
  1710  0472  0275               	subwf	___lldiv@dividend+1,w
  1711  0473  1D03               	skipz
  1712  0474  2C77               	goto	u295
  1713  0475  0870               	movf	___lldiv@divisor,w
  1714  0476  0274               	subwf	___lldiv@dividend,w
  1715  0477                     u295:	
  1716  0477  1C03               	skipc
  1717  0478  2C7A               	goto	u291
  1718  0479  2C7B               	goto	u290
  1719  047A                     u291:	
  1720  047A  2C8A               	goto	l1142
  1721  047B                     u290:	
  1722  047B                     l1138:	
  1723  047B  0870               	movf	___lldiv@divisor,w
  1724  047C  02F4               	subwf	___lldiv@dividend,f
  1725  047D  0871               	movf	___lldiv@divisor+1,w
  1726  047E  1C03               	skipc
  1727  047F  0F71               	incfsz	___lldiv@divisor+1,w
  1728  0480  02F5               	subwf	___lldiv@dividend+1,f
  1729  0481  0872               	movf	___lldiv@divisor+2,w
  1730  0482  1C03               	skipc
  1731  0483  0F72               	incfsz	___lldiv@divisor+2,w
  1732  0484  02F6               	subwf	___lldiv@dividend+2,f
  1733  0485  0873               	movf	___lldiv@divisor+3,w
  1734  0486  1C03               	skipc
  1735  0487  0F73               	incfsz	___lldiv@divisor+3,w
  1736  0488  02F7               	subwf	___lldiv@dividend+3,f
  1737  0489                     l1140:	
  1738  0489  1479               	bsf	___lldiv@quotient,0
  1739  048A                     l1142:	
  1740  048A  3001               	movlw	1
  1741  048B                     u305:	
  1742  048B  1003               	clrc
  1743  048C  0CF3               	rrf	___lldiv@divisor+3,f
  1744  048D  0CF2               	rrf	___lldiv@divisor+2,f
  1745  048E  0CF1               	rrf	___lldiv@divisor+1,f
  1746  048F  0CF0               	rrf	___lldiv@divisor,f
  1747  0490  3EFF               	addlw	-1
  1748  0491  1D03               	skipz
  1749  0492  2C8B               	goto	u305
  1750  0493                     l1144:	
  1751  0493  3001               	movlw	1
  1752  0494  02FD               	subwf	___lldiv@counter,f
  1753  0495  1D03               	btfss	3,2
  1754  0496  2C98               	goto	u311
  1755  0497  2C99               	goto	u310
  1756  0498                     u311:	
  1757  0498  2C60               	goto	l1134
  1758  0499                     u310:	
  1759  0499                     l1146:	
  1760  0499  087C               	movf	___lldiv@quotient+3,w
  1761  049A  00F3               	movwf	?___lldiv+3
  1762  049B  087B               	movf	___lldiv@quotient+2,w
  1763  049C  00F2               	movwf	?___lldiv+2
  1764  049D  087A               	movf	___lldiv@quotient+1,w
  1765  049E  00F1               	movwf	?___lldiv+1
  1766  049F  0879               	movf	___lldiv@quotient,w
  1767  04A0  00F0               	movwf	?___lldiv
  1768  04A1                     l312:	
  1769  04A1  0008               	return
  1770  04A2                     __end_of___lldiv:	
  1771                           
  1772                           	psect	text5
  1773  05B4                     __ptext5:	
  1774 ;; *************** function _mapeo *****************
  1775 ;; Defined at:
  1776 ;;		line 144 in file "i2C_Master.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  valor           1    wreg     unsigned char 
  1779 ;;  limPIC          1    6[COMMON] unsigned char 
  1780 ;;  limFisico       1    7[COMMON] unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  valor           1    0[BANK0 ] unsigned char 
  1783 ;;  result          6    1[BANK0 ] unsigned int [3]
  1784 ;;  dividendo       2    7[BANK0 ] unsigned int 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      PTR unsigned int 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1794 ;;      Params:         2       0       0       0       0
  1795 ;;      Locals:         0       9       0       0       0
  1796 ;;      Temps:          4       0       0       0       0
  1797 ;;      Totals:         6       9       0       0       0
  1798 ;;Total ram usage:       15 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    1
  1801 ;; This function calls:
  1802 ;;		___wmul
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _mapeo
  1810  05B4                     _mapeo:	
  1811                           
  1812                           ;incstack = 0
  1813                           ; Regs used in _mapeo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1814                           ;mapeo@valor stored from wreg
  1815  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  1816  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  1817  05B6  00A0               	movwf	mapeo@valor
  1818  05B7                     l1280:	
  1819                           
  1820                           ;i2C_Master.c: 145:     uint16_t result[3] = {0,0,0};
  1821  05B7  3021               	movlw	mapeo@result& (0+255)
  1822  05B8  0084               	movwf	4
  1823  05B9  3006               	movlw	6
  1824  05BA  00FF               	movwf	btemp+1
  1825  05BB                     u430:	
  1826  05BB  1383               	bcf	3,7	;select IRP bank0
  1827  05BC  0180               	clrf	0
  1828  05BD  0A84               	incf	4,f
  1829  05BE  0BFF               	decfsz	btemp+1,f
  1830  05BF  2DBB               	goto	u430
  1831  05C0                     l1282:	
  1832                           
  1833                           ;i2C_Master.c: 146:     uint16_t dividendo = valor*limFisico;
  1834  05C0  0820               	movf	mapeo@valor,w
  1835  05C1  00F8               	movwf	??_mapeo
  1836  05C2  01F9               	clrf	??_mapeo+1
  1837  05C3  0878               	movf	??_mapeo,w
  1838  05C4  00F0               	movwf	___wmul@multiplier
  1839  05C5  0879               	movf	??_mapeo+1,w
  1840  05C6  00F1               	movwf	___wmul@multiplier+1
  1841  05C7  0877               	movf	mapeo@limFisico,w
  1842  05C8  00FA               	movwf	??_mapeo+2
  1843  05C9  01FB               	clrf	??_mapeo+3
  1844  05CA  087A               	movf	??_mapeo+2,w
  1845  05CB  00F2               	movwf	___wmul@multiplicand
  1846  05CC  087B               	movf	??_mapeo+3,w
  1847  05CD  00F3               	movwf	___wmul@multiplicand+1
  1848  05CE  120A  118A  2388  120A  118A  	fcall	___wmul
  1849  05D3  0871               	movf	?___wmul+1,w
  1850  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  1851  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  1852  05D6  00A8               	movwf	mapeo@dividendo+1
  1853  05D7  0870               	movf	?___wmul,w
  1854  05D8  00A7               	movwf	mapeo@dividendo
  1855                           
  1856                           ;i2C_Master.c: 147:     while (limPIC <= dividendo){
  1857  05D9  2DE9               	goto	l1286
  1858  05DA                     l1284:	
  1859                           
  1860                           ;i2C_Master.c: 148:         result[0] = result[0] + 1;
  1861  05DA  0821               	movf	mapeo@result,w
  1862  05DB  3E01               	addlw	1
  1863  05DC  00A1               	movwf	mapeo@result
  1864  05DD  0822               	movf	mapeo@result+1,w
  1865  05DE  1803               	skipnc
  1866  05DF  3E01               	addlw	1
  1867  05E0  3E00               	addlw	0
  1868  05E1  00A2               	movwf	mapeo@result+1
  1869                           
  1870                           ;i2C_Master.c: 149:         dividendo = dividendo - limPIC;
  1871  05E2  0876               	movf	mapeo@limPIC,w
  1872  05E3  0227               	subwf	mapeo@dividendo,w
  1873  05E4  00A7               	movwf	mapeo@dividendo
  1874  05E5  0828               	movf	mapeo@dividendo+1,w
  1875  05E6  1C03               	skipc
  1876  05E7  0328               	decf	mapeo@dividendo+1,w
  1877  05E8  00A8               	movwf	mapeo@dividendo+1
  1878  05E9                     l1286:	
  1879                           
  1880                           ;i2C_Master.c: 147:     while (limPIC <= dividendo){
  1881  05E9  0876               	movf	mapeo@limPIC,w
  1882  05EA  00F8               	movwf	??_mapeo
  1883  05EB  01F9               	clrf	??_mapeo+1
  1884  05EC  0879               	movf	??_mapeo+1,w
  1885  05ED  0228               	subwf	mapeo@dividendo+1,w
  1886  05EE  1D03               	skipz
  1887  05EF  2DF2               	goto	u445
  1888  05F0  0878               	movf	??_mapeo,w
  1889  05F1  0227               	subwf	mapeo@dividendo,w
  1890  05F2                     u445:	
  1891  05F2  1803               	skipnc
  1892  05F3  2DF5               	goto	u441
  1893  05F4  2DF6               	goto	u440
  1894  05F5                     u441:	
  1895  05F5  2DDA               	goto	l1284
  1896  05F6                     u440:	
  1897  05F6                     l1288:	
  1898                           
  1899                           ;i2C_Master.c: 151:     dividendo = dividendo *10;
  1900  05F6  0828               	movf	mapeo@dividendo+1,w
  1901  05F7  00F1               	movwf	___wmul@multiplier+1
  1902  05F8  0827               	movf	mapeo@dividendo,w
  1903  05F9  00F0               	movwf	___wmul@multiplier
  1904  05FA  300A               	movlw	10
  1905  05FB  00F2               	movwf	___wmul@multiplicand
  1906  05FC  3000               	movlw	0
  1907  05FD  00F3               	movwf	___wmul@multiplicand+1
  1908  05FE  120A  118A  2388  120A  118A  	fcall	___wmul
  1909  0603  0871               	movf	?___wmul+1,w
  1910  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0606  00A8               	movwf	mapeo@dividendo+1
  1913  0607  0870               	movf	?___wmul,w
  1914  0608  00A7               	movwf	mapeo@dividendo
  1915                           
  1916                           ;i2C_Master.c: 152:     while (limPIC <= dividendo){
  1917  0609  2E19               	goto	l1292
  1918  060A                     l1290:	
  1919                           
  1920                           ;i2C_Master.c: 153:         result[1] = result[1] +1;
  1921  060A  0823               	movf	mapeo@result+2,w
  1922  060B  3E01               	addlw	1
  1923  060C  00A3               	movwf	mapeo@result+2
  1924  060D  0824               	movf	mapeo@result+3,w
  1925  060E  1803               	skipnc
  1926  060F  3E01               	addlw	1
  1927  0610  3E00               	addlw	0
  1928  0611  00A4               	movwf	mapeo@result+3
  1929                           
  1930                           ;i2C_Master.c: 154:         dividendo = dividendo - limPIC;
  1931  0612  0876               	movf	mapeo@limPIC,w
  1932  0613  0227               	subwf	mapeo@dividendo,w
  1933  0614  00A7               	movwf	mapeo@dividendo
  1934  0615  0828               	movf	mapeo@dividendo+1,w
  1935  0616  1C03               	skipc
  1936  0617  0328               	decf	mapeo@dividendo+1,w
  1937  0618  00A8               	movwf	mapeo@dividendo+1
  1938  0619                     l1292:	
  1939                           
  1940                           ;i2C_Master.c: 152:     while (limPIC <= dividendo){
  1941  0619  0876               	movf	mapeo@limPIC,w
  1942  061A  00F8               	movwf	??_mapeo
  1943  061B  01F9               	clrf	??_mapeo+1
  1944  061C  0879               	movf	??_mapeo+1,w
  1945  061D  0228               	subwf	mapeo@dividendo+1,w
  1946  061E  1D03               	skipz
  1947  061F  2E22               	goto	u455
  1948  0620  0878               	movf	??_mapeo,w
  1949  0621  0227               	subwf	mapeo@dividendo,w
  1950  0622                     u455:	
  1951  0622  1803               	skipnc
  1952  0623  2E25               	goto	u451
  1953  0624  2E26               	goto	u450
  1954  0625                     u451:	
  1955  0625  2E0A               	goto	l1290
  1956  0626                     u450:	
  1957  0626                     l1294:	
  1958                           
  1959                           ;i2C_Master.c: 156:     dividendo = dividendo *10;
  1960  0626  0828               	movf	mapeo@dividendo+1,w
  1961  0627  00F1               	movwf	___wmul@multiplier+1
  1962  0628  0827               	movf	mapeo@dividendo,w
  1963  0629  00F0               	movwf	___wmul@multiplier
  1964  062A  300A               	movlw	10
  1965  062B  00F2               	movwf	___wmul@multiplicand
  1966  062C  3000               	movlw	0
  1967  062D  00F3               	movwf	___wmul@multiplicand+1
  1968  062E  120A  118A  2388  120A  118A  	fcall	___wmul
  1969  0633  0871               	movf	?___wmul+1,w
  1970  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0636  00A8               	movwf	mapeo@dividendo+1
  1973  0637  0870               	movf	?___wmul,w
  1974  0638  00A7               	movwf	mapeo@dividendo
  1975                           
  1976                           ;i2C_Master.c: 157:     while (limPIC <= dividendo){
  1977  0639  2E49               	goto	l1298
  1978  063A                     l1296:	
  1979                           
  1980                           ;i2C_Master.c: 158:         result[2] = result[2] +1;
  1981  063A  0825               	movf	mapeo@result+4,w
  1982  063B  3E01               	addlw	1
  1983  063C  00A5               	movwf	mapeo@result+4
  1984  063D  0826               	movf	mapeo@result+5,w
  1985  063E  1803               	skipnc
  1986  063F  3E01               	addlw	1
  1987  0640  3E00               	addlw	0
  1988  0641  00A6               	movwf	mapeo@result+5
  1989                           
  1990                           ;i2C_Master.c: 159:         dividendo = dividendo - limPIC;
  1991  0642  0876               	movf	mapeo@limPIC,w
  1992  0643  0227               	subwf	mapeo@dividendo,w
  1993  0644  00A7               	movwf	mapeo@dividendo
  1994  0645  0828               	movf	mapeo@dividendo+1,w
  1995  0646  1C03               	skipc
  1996  0647  0328               	decf	mapeo@dividendo+1,w
  1997  0648  00A8               	movwf	mapeo@dividendo+1
  1998  0649                     l1298:	
  1999                           
  2000                           ;i2C_Master.c: 157:     while (limPIC <= dividendo){
  2001  0649  0876               	movf	mapeo@limPIC,w
  2002  064A  00F8               	movwf	??_mapeo
  2003  064B  01F9               	clrf	??_mapeo+1
  2004  064C  0879               	movf	??_mapeo+1,w
  2005  064D  0228               	subwf	mapeo@dividendo+1,w
  2006  064E  1D03               	skipz
  2007  064F  2E52               	goto	u465
  2008  0650  0878               	movf	??_mapeo,w
  2009  0651  0227               	subwf	mapeo@dividendo,w
  2010  0652                     u465:	
  2011  0652  1803               	skipnc
  2012  0653  2E55               	goto	u461
  2013  0654  2E56               	goto	u460
  2014  0655                     u461:	
  2015  0655  2E3A               	goto	l1296
  2016  0656                     u460:	
  2017  0656                     l1300:	
  2018                           
  2019                           ;i2C_Master.c: 162:     return(result);
  2020  0656  3021               	movlw	(low (mapeo@result| 0))& (0+255)
  2021  0657                     l79:	
  2022  0657  0008               	return
  2023  0658                     __end_of_mapeo:	
  2024                           
  2025                           	psect	text6
  2026  0388                     __ptext6:	
  2027 ;; *************** function ___wmul *****************
  2028 ;; Defined at:
  2029 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  multiplier      2    0[COMMON] unsigned int 
  2032 ;;  multiplicand    2    2[COMMON] unsigned int 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  product         2    4[COMMON] unsigned int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2    0[COMMON] unsigned int 
  2037 ;; Registers used:
  2038 ;;		wreg, status,2, status,0
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2044 ;;      Params:         4       0       0       0       0
  2045 ;;      Locals:         2       0       0       0       0
  2046 ;;      Temps:          0       0       0       0       0
  2047 ;;      Totals:         6       0       0       0       0
  2048 ;;Total ram usage:        6 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_mapeo
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function ___wmul
  2059  0388                     ___wmul:	
  2060  0388                     l1182:	
  2061                           ;incstack = 0
  2062                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2063                           
  2064  0388  01F4               	clrf	___wmul@product
  2065  0389  01F5               	clrf	___wmul@product+1
  2066  038A                     l1184:	
  2067  038A  1C70               	btfss	___wmul@multiplier,0
  2068  038B  2B8D               	goto	u351
  2069  038C  2B8E               	goto	u350
  2070  038D                     u351:	
  2071  038D  2B94               	goto	l276
  2072  038E                     u350:	
  2073  038E                     l1186:	
  2074  038E  0872               	movf	___wmul@multiplicand,w
  2075  038F  07F4               	addwf	___wmul@product,f
  2076  0390  1803               	skipnc
  2077  0391  0AF5               	incf	___wmul@product+1,f
  2078  0392  0873               	movf	___wmul@multiplicand+1,w
  2079  0393  07F5               	addwf	___wmul@product+1,f
  2080  0394                     l276:	
  2081  0394  3001               	movlw	1
  2082  0395                     u365:	
  2083  0395  1003               	clrc
  2084  0396  0DF2               	rlf	___wmul@multiplicand,f
  2085  0397  0DF3               	rlf	___wmul@multiplicand+1,f
  2086  0398  3EFF               	addlw	-1
  2087  0399  1D03               	skipz
  2088  039A  2B95               	goto	u365
  2089  039B                     l1188:	
  2090  039B  3001               	movlw	1
  2091  039C                     u375:	
  2092  039C  1003               	clrc
  2093  039D  0CF1               	rrf	___wmul@multiplier+1,f
  2094  039E  0CF0               	rrf	___wmul@multiplier,f
  2095  039F  3EFF               	addlw	-1
  2096  03A0  1D03               	skipz
  2097  03A1  2B9C               	goto	u375
  2098  03A2                     l1190:	
  2099  03A2  0870               	movf	___wmul@multiplier,w
  2100  03A3  0471               	iorwf	___wmul@multiplier+1,w
  2101  03A4  1D03               	btfss	3,2
  2102  03A5  2BA7               	goto	u381
  2103  03A6  2BA8               	goto	u380
  2104  03A7                     u381:	
  2105  03A7  2B8A               	goto	l1184
  2106  03A8                     u380:	
  2107  03A8                     l1192:	
  2108  03A8  0875               	movf	___wmul@product+1,w
  2109  03A9  00F1               	movwf	?___wmul+1
  2110  03AA  0874               	movf	___wmul@product,w
  2111  03AB  00F0               	movwf	?___wmul
  2112  03AC                     l278:	
  2113  03AC  0008               	return
  2114  03AD                     __end_of___wmul:	
  2115                           
  2116                           	psect	text7
  2117  02F3                     __ptext7:	
  2118 ;; *************** function ___bmul *****************
  2119 ;; Defined at:
  2120 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  multiplier      1    wreg     unsigned char 
  2123 ;;  multiplicand    1    0[COMMON] unsigned char 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  multiplier      1    3[COMMON] unsigned char 
  2126 ;;  product         1    2[COMMON] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      unsigned char 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         1       0       0       0       0
  2137 ;;      Locals:         2       0       0       0       0
  2138 ;;      Temps:          1       0       0       0       0
  2139 ;;      Totals:         4       0       0       0       0
  2140 ;;Total ram usage:        4 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; This function calls:
  2143 ;;		Nothing
  2144 ;; This function is called by:
  2145 ;;		_main
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           
  2150                           ;psect for function ___bmul
  2151  02F3                     ___bmul:	
  2152                           
  2153                           ;incstack = 0
  2154                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2155                           ;___bmul@multiplier stored from wreg
  2156  02F3  00F3               	movwf	___bmul@multiplier
  2157  02F4                     l1350:	
  2158  02F4  01F2               	clrf	___bmul@product
  2159  02F5                     l1352:	
  2160  02F5  1C73               	btfss	___bmul@multiplier,0
  2161  02F6  2AF8               	goto	u471
  2162  02F7  2AF9               	goto	u470
  2163  02F8                     u471:	
  2164  02F8  2AFD               	goto	l1356
  2165  02F9                     u470:	
  2166  02F9                     l1354:	
  2167  02F9  0870               	movf	___bmul@multiplicand,w
  2168  02FA  00F1               	movwf	??___bmul
  2169  02FB  0871               	movf	??___bmul,w
  2170  02FC  07F2               	addwf	___bmul@product,f
  2171  02FD                     l1356:	
  2172  02FD  1003               	clrc
  2173  02FE  0DF0               	rlf	___bmul@multiplicand,f
  2174  02FF                     l1358:	
  2175  02FF  1003               	clrc
  2176  0300  0CF3               	rrf	___bmul@multiplier,f
  2177  0301  0873               	movf	___bmul@multiplier,w
  2178  0302  1D03               	btfss	3,2
  2179  0303  2B05               	goto	u481
  2180  0304  2B06               	goto	u480
  2181  0305                     u481:	
  2182  0305  2AF5               	goto	l1352
  2183  0306                     u480:	
  2184  0306                     l1360:	
  2185  0306  0872               	movf	___bmul@product,w
  2186  0307                     l302:	
  2187  0307  0008               	return
  2188  0308                     __end_of___bmul:	
  2189                           
  2190                           	psect	text8
  2191  04A2                     __ptext8:	
  2192 ;; *************** function _LCD_iniciar *****************
  2193 ;; Defined at:
  2194 ;;		line 25 in file "Lib_LCD.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  1    wreg      void 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0, pclath, cstack
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         0       0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0
  2210 ;;      Temps:          2       0       0       0       0
  2211 ;;      Totals:         2       0       0       0       0
  2212 ;;Total ram usage:        2 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; Hardware stack levels required when called:    1
  2215 ;; This function calls:
  2216 ;;		_LCD_DATO
  2217 ;; This function is called by:
  2218 ;;		_main
  2219 ;; This function uses a non-reentrant model
  2220 ;;
  2221                           
  2222                           
  2223                           ;psect for function _LCD_iniciar
  2224  04A2                     _LCD_iniciar:	
  2225  04A2                     l1204:	
  2226                           ;incstack = 0
  2227                           ; Regs used in _LCD_iniciar: [wreg+status,2+status,0+pclath+cstack]
  2228                           
  2229                           
  2230                           ;Lib_LCD.c: 26:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2231  04A2  301A               	movlw	26
  2232  04A3  00F5               	movwf	??_LCD_iniciar+1
  2233  04A4  30F8               	movlw	248
  2234  04A5  00F4               	movwf	??_LCD_iniciar
  2235  04A6                     u527:	
  2236  04A6  0BF4               	decfsz	??_LCD_iniciar,f
  2237  04A7  2CA6               	goto	u527
  2238  04A8  0BF5               	decfsz	??_LCD_iniciar+1,f
  2239  04A9  2CA6               	goto	u527
  2240  04AA  0000               	nop
  2241  04AB                     l1206:	
  2242                           
  2243                           ;Lib_LCD.c: 27:     LCD_DATO(0x30);
  2244  04AB  3030               	movlw	48
  2245  04AC  00F0               	movwf	LCD_DATO@var
  2246  04AD  3000               	movlw	0
  2247  04AE  00F1               	movwf	LCD_DATO@var+1
  2248  04AF  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2249  04B4                     l1208:	
  2250                           
  2251                           ;Lib_LCD.c: 28:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2252  04B4  3007               	movlw	7
  2253  04B5  00F5               	movwf	??_LCD_iniciar+1
  2254  04B6  307D               	movlw	125
  2255  04B7  00F4               	movwf	??_LCD_iniciar
  2256  04B8                     u537:	
  2257  04B8  0BF4               	decfsz	??_LCD_iniciar,f
  2258  04B9  2CB8               	goto	u537
  2259  04BA  0BF5               	decfsz	??_LCD_iniciar+1,f
  2260  04BB  2CB8               	goto	u537
  2261                           
  2262                           ;Lib_LCD.c: 29:     LCD_DATO(0x30);
  2263  04BC  3030               	movlw	48
  2264  04BD  00F0               	movwf	LCD_DATO@var
  2265  04BE  3000               	movlw	0
  2266  04BF  00F1               	movwf	LCD_DATO@var+1
  2267  04C0  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2268  04C5                     l1210:	
  2269                           
  2270                           ;Lib_LCD.c: 30:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2271  04C5  3021               	movlw	33
  2272  04C6  00F4               	movwf	??_LCD_iniciar
  2273  04C7                     u547:	
  2274  04C7  0BF4               	decfsz	??_LCD_iniciar,f
  2275  04C8  2CC7               	goto	u547
  2276  04C9                     l1212:	
  2277                           
  2278                           ;Lib_LCD.c: 31:     LCD_DATO(0x30);
  2279  04C9  3030               	movlw	48
  2280  04CA  00F0               	movwf	LCD_DATO@var
  2281  04CB  3000               	movlw	0
  2282  04CC  00F1               	movwf	LCD_DATO@var+1
  2283  04CD  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2284                           
  2285                           ;Lib_LCD.c: 32:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  2286  04D2  3021               	movlw	33
  2287  04D3  00F4               	movwf	??_LCD_iniciar
  2288  04D4                     u557:	
  2289  04D4  0BF4               	decfsz	??_LCD_iniciar,f
  2290  04D5  2CD4               	goto	u557
  2291  04D6                     l1214:	
  2292                           
  2293                           ;Lib_LCD.c: 33:     LCD_DATO(0x38);
  2294  04D6  3038               	movlw	56
  2295  04D7  00F0               	movwf	LCD_DATO@var
  2296  04D8  3000               	movlw	0
  2297  04D9  00F1               	movwf	LCD_DATO@var+1
  2298  04DA  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2299  04DF                     l1216:	
  2300                           
  2301                           ;Lib_LCD.c: 34:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2302  04DF  3011               	movlw	17
  2303  04E0  00F4               	movwf	??_LCD_iniciar
  2304  04E1                     u567:	
  2305  04E1  0BF4               	decfsz	??_LCD_iniciar,f
  2306  04E2  2CE1               	goto	u567
  2307  04E3  0000               	nop
  2308                           
  2309                           ;Lib_LCD.c: 35:     LCD_DATO(0x08);
  2310  04E4  3008               	movlw	8
  2311  04E5  00F0               	movwf	LCD_DATO@var
  2312  04E6  3000               	movlw	0
  2313  04E7  00F1               	movwf	LCD_DATO@var+1
  2314  04E8  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2315  04ED                     l1218:	
  2316                           
  2317                           ;Lib_LCD.c: 36:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2318  04ED  3011               	movlw	17
  2319  04EE  00F4               	movwf	??_LCD_iniciar
  2320  04EF                     u577:	
  2321  04EF  0BF4               	decfsz	??_LCD_iniciar,f
  2322  04F0  2CEF               	goto	u577
  2323  04F1  0000               	nop
  2324  04F2                     l1220:	
  2325                           
  2326                           ;Lib_LCD.c: 37:     LCD_DATO(0x01);
  2327  04F2  3001               	movlw	1
  2328  04F3  00F0               	movwf	LCD_DATO@var
  2329  04F4  3000               	movlw	0
  2330  04F5  00F1               	movwf	LCD_DATO@var+1
  2331  04F6  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2332                           
  2333                           ;Lib_LCD.c: 38:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2334  04FB  3006               	movlw	6
  2335  04FC  00F5               	movwf	??_LCD_iniciar+1
  2336  04FD  3030               	movlw	48
  2337  04FE  00F4               	movwf	??_LCD_iniciar
  2338  04FF                     u587:	
  2339  04FF  0BF4               	decfsz	??_LCD_iniciar,f
  2340  0500  2CFF               	goto	u587
  2341  0501  0BF5               	decfsz	??_LCD_iniciar+1,f
  2342  0502  2CFF               	goto	u587
  2343  0503  0000               	nop
  2344  0504                     l1222:	
  2345                           
  2346                           ;Lib_LCD.c: 39:     LCD_DATO(0x06);
  2347  0504  3006               	movlw	6
  2348  0505  00F0               	movwf	LCD_DATO@var
  2349  0506  3000               	movlw	0
  2350  0507  00F1               	movwf	LCD_DATO@var+1
  2351  0508  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2352  050D                     l1224:	
  2353                           
  2354                           ;Lib_LCD.c: 40:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2355  050D  3011               	movlw	17
  2356  050E  00F4               	movwf	??_LCD_iniciar
  2357  050F                     u597:	
  2358  050F  0BF4               	decfsz	??_LCD_iniciar,f
  2359  0510  2D0F               	goto	u597
  2360  0511  0000               	nop
  2361                           
  2362                           ;Lib_LCD.c: 41:     LCD_DATO(0x0C);
  2363  0512  300C               	movlw	12
  2364  0513  00F0               	movwf	LCD_DATO@var
  2365  0514  3000               	movlw	0
  2366  0515  00F1               	movwf	LCD_DATO@var+1
  2367  0516  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2368  051B                     l1226:	
  2369                           
  2370                           ;Lib_LCD.c: 42:     _delay((unsigned long)((53)*(4000000/4000000.0)));
  2371  051B  3011               	movlw	17
  2372  051C  00F4               	movwf	??_LCD_iniciar
  2373  051D                     u607:	
  2374  051D  0BF4               	decfsz	??_LCD_iniciar,f
  2375  051E  2D1D               	goto	u607
  2376  051F  0000               	nop
  2377  0520                     l92:	
  2378  0520  0008               	return
  2379  0521                     __end_of_LCD_iniciar:	
  2380                           
  2381                           	psect	text9
  2382  0363                     __ptext9:	
  2383 ;; *************** function _LCD_STRING *****************
  2384 ;; Defined at:
  2385 ;;		line 89 in file "Lib_LCD.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  a               1    wreg     PTR unsigned char 
  2388 ;;		 -> STR_1(14), 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  a               1    4[COMMON] PTR unsigned char 
  2391 ;;		 -> STR_1(14), 
  2392 ;;  n               2    2[COMMON] int 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       0       0       0       0
  2403 ;;      Locals:         3       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0
  2405 ;;      Totals:         3       0       0       0       0
  2406 ;;Total ram usage:        3 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		_LCD_CHAR
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _LCD_STRING
  2418  0363                     _LCD_STRING:	
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _LCD_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2422                           ;LCD_STRING@a stored from wreg
  2423  0363  00F4               	movwf	LCD_STRING@a
  2424  0364                     l1244:	
  2425                           
  2426                           ;Lib_LCD.c: 89: void LCD_STRING(char *a);Lib_LCD.c: 90: {;Lib_LCD.c: 91:     int n;;Lib_
      +                          LCD.c: 92:     for(n = 0; a[n] != '\0'; n++){
  2427  0364  01F2               	clrf	LCD_STRING@n
  2428  0365  01F3               	clrf	LCD_STRING@n+1
  2429  0366  2B7A               	goto	l1250
  2430  0367                     l1246:	
  2431                           
  2432                           ;Lib_LCD.c: 93:         LCD_CHAR(a[n]);
  2433  0367  0872               	movf	LCD_STRING@n,w
  2434  0368  0774               	addwf	LCD_STRING@a,w
  2435  0369  0084               	movwf	4
  2436  036A  120A  118A  2003  120A  118A  	fcall	stringdir
  2437  036F  120A  118A  22E4  120A  118A  	fcall	_LCD_CHAR
  2438  0374                     l1248:	
  2439                           
  2440                           ;Lib_LCD.c: 94:     }
  2441  0374  3001               	movlw	1
  2442  0375  07F2               	addwf	LCD_STRING@n,f
  2443  0376  1803               	skipnc
  2444  0377  0AF3               	incf	LCD_STRING@n+1,f
  2445  0378  3000               	movlw	0
  2446  0379  07F3               	addwf	LCD_STRING@n+1,f
  2447  037A                     l1250:	
  2448  037A  0872               	movf	LCD_STRING@n,w
  2449  037B  0774               	addwf	LCD_STRING@a,w
  2450  037C  0084               	movwf	4
  2451  037D  120A  118A  2003  120A  118A  	fcall	stringdir
  2452  0382  3A00               	xorlw	0
  2453  0383  1D03               	skipz
  2454  0384  2B86               	goto	u411
  2455  0385  2B87               	goto	u410
  2456  0386                     u411:	
  2457  0386  2B67               	goto	l1246
  2458  0387                     u410:	
  2459  0387                     l113:	
  2460  0387  0008               	return
  2461  0388                     __end_of_LCD_STRING:	
  2462                           
  2463                           	psect	text10
  2464  02E4                     __ptext10:	
  2465 ;; *************** function _LCD_CHAR *****************
  2466 ;; Defined at:
  2467 ;;		line 79 in file "Lib_LCD.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  a               1    wreg     unsigned char 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  a               1    1[COMMON] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       0       0       0       0
  2482 ;;      Locals:         1       0       0       0       0
  2483 ;;      Temps:          1       0       0       0       0
  2484 ;;      Totals:         2       0       0       0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_main
  2491 ;;		_LCD_STRING
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function _LCD_CHAR
  2497  02E4                     _LCD_CHAR:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in _LCD_CHAR: [wreg]
  2501                           ;LCD_CHAR@a stored from wreg
  2502  02E4  00F1               	movwf	LCD_CHAR@a
  2503  02E5                     l1150:	
  2504                           
  2505                           ;Lib_LCD.c: 79: void LCD_CHAR(char a);Lib_LCD.c: 80: {;Lib_LCD.c: 81:     RA3 = 1;
  2506  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2507  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2508  02E7  1585               	bsf	5,3	;volatile
  2509  02E8                     l1152:	
  2510                           
  2511                           ;Lib_LCD.c: 83:     PORTB = a;
  2512  02E8  0871               	movf	LCD_CHAR@a,w
  2513  02E9  0086               	movwf	6	;volatile
  2514  02EA                     l1154:	
  2515                           
  2516                           ;Lib_LCD.c: 84:     RA4 = 1;
  2517  02EA  1605               	bsf	5,4	;volatile
  2518                           
  2519                           ;Lib_LCD.c: 85:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2520  02EB  300D               	movlw	13
  2521  02EC  00F0               	movwf	??_LCD_CHAR
  2522  02ED                     u617:	
  2523  02ED  0BF0               	decfsz	??_LCD_CHAR,f
  2524  02EE  2AED               	goto	u617
  2525  02EF                     l1156:	
  2526                           
  2527                           ;Lib_LCD.c: 86:     RA4 = 0;
  2528  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2529  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2530  02F1  1205               	bcf	5,4	;volatile
  2531  02F2                     l107:	
  2532  02F2  0008               	return
  2533  02F3                     __end_of_LCD_CHAR:	
  2534                           
  2535                           	psect	text11
  2536  03AD                     __ptext11:	
  2537 ;; *************** function _LCD_CURSOR *****************
  2538 ;; Defined at:
  2539 ;;		line 62 in file "Lib_LCD.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  a               2    4[COMMON] int 
  2542 ;;  b               2    6[COMMON] int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  d               2    8[COMMON] int 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         4       0       0       0       0
  2555 ;;      Locals:         2       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0
  2557 ;;      Totals:         6       0       0       0       0
  2558 ;;Total ram usage:        6 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    1
  2561 ;; This function calls:
  2562 ;;		_LCD_DATO
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function _LCD_CURSOR
  2570  03AD                     _LCD_CURSOR:	
  2571  03AD                     l1232:	
  2572                           ;incstack = 0
  2573                           ; Regs used in _LCD_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  2574                           
  2575                           
  2576                           ;Lib_LCD.c: 62: void LCD_CURSOR(int a, int b);Lib_LCD.c: 63: {;Lib_LCD.c: 64:     int d;
      +                          ;Lib_LCD.c: 65:  if(a == 1)
  2577  03AD  0374               	decf	LCD_CURSOR@a,w
  2578  03AE  0475               	iorwf	LCD_CURSOR@a+1,w
  2579  03AF  1D03               	btfss	3,2
  2580  03B0  2BB2               	goto	u391
  2581  03B1  2BB3               	goto	u390
  2582  03B2                     u391:	
  2583  03B2  2BC5               	goto	l1238
  2584  03B3                     u390:	
  2585  03B3                     l1234:	
  2586                           
  2587                           ;Lib_LCD.c: 66:  {;Lib_LCD.c: 67:         d = 0x80 + b - 1;
  2588  03B3  0876               	movf	LCD_CURSOR@b,w
  2589  03B4  3E7F               	addlw	127
  2590  03B5  00F8               	movwf	LCD_CURSOR@d
  2591  03B6  0877               	movf	LCD_CURSOR@b+1,w
  2592  03B7  1803               	skipnc
  2593  03B8  3E01               	addlw	1
  2594  03B9  3E00               	addlw	0
  2595  03BA  00F9               	movwf	LCD_CURSOR@d+1
  2596  03BB                     l1236:	
  2597                           
  2598                           ;Lib_LCD.c: 68:   LCD_DATO(d);
  2599  03BB  0879               	movf	LCD_CURSOR@d+1,w
  2600  03BC  00F1               	movwf	LCD_DATO@var+1
  2601  03BD  0878               	movf	LCD_CURSOR@d,w
  2602  03BE  00F0               	movwf	LCD_DATO@var
  2603  03BF  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2604                           
  2605                           ;Lib_LCD.c: 69:  }
  2606  03C4  2BD5               	goto	l104
  2607  03C5                     l1238:	
  2608  03C5  3002               	movlw	2
  2609  03C6  0674               	xorwf	LCD_CURSOR@a,w
  2610  03C7  0475               	iorwf	LCD_CURSOR@a+1,w
  2611  03C8  1D03               	btfss	3,2
  2612  03C9  2BCB               	goto	u401
  2613  03CA  2BCC               	goto	u400
  2614  03CB                     u401:	
  2615  03CB  2BD5               	goto	l104
  2616  03CC                     u400:	
  2617  03CC                     l1240:	
  2618                           
  2619                           ;Lib_LCD.c: 71:  {;Lib_LCD.c: 72:   d = 0xC0 + b - 1;
  2620  03CC  0876               	movf	LCD_CURSOR@b,w
  2621  03CD  3EBF               	addlw	191
  2622  03CE  00F8               	movwf	LCD_CURSOR@d
  2623  03CF  0877               	movf	LCD_CURSOR@b+1,w
  2624  03D0  1803               	skipnc
  2625  03D1  3E01               	addlw	1
  2626  03D2  3E00               	addlw	0
  2627  03D3  00F9               	movwf	LCD_CURSOR@d+1
  2628  03D4  2BBB               	goto	l1236
  2629  03D5                     l104:	
  2630  03D5  0008               	return
  2631  03D6                     __end_of_LCD_CURSOR:	
  2632                           
  2633                           	psect	text12
  2634  0308                     __ptext12:	
  2635 ;; *************** function _LCD_CLEAR *****************
  2636 ;; Defined at:
  2637 ;;		line 55 in file "Lib_LCD.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2, status,0, pclath, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2651 ;;      Params:         0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0
  2653 ;;      Temps:          2       0       0       0       0
  2654 ;;      Totals:         2       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    1
  2658 ;; This function calls:
  2659 ;;		_LCD_DATO
  2660 ;; This function is called by:
  2661 ;;		_main
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           
  2666                           ;psect for function _LCD_CLEAR
  2667  0308                     _LCD_CLEAR:	
  2668  0308                     l1228:	
  2669                           ;incstack = 0
  2670                           ; Regs used in _LCD_CLEAR: [wreg+status,2+status,0+pclath+cstack]
  2671                           
  2672                           
  2673                           ;Lib_LCD.c: 56:     LCD_DATO(0x00);
  2674  0308  3000               	movlw	0
  2675  0309  00F0               	movwf	LCD_DATO@var
  2676  030A  00F1               	movwf	LCD_DATO@var+1
  2677  030B  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2678                           
  2679                           ;Lib_LCD.c: 57:     LCD_DATO(0x01);
  2680  0310  3001               	movlw	1
  2681  0311  00F0               	movwf	LCD_DATO@var
  2682  0312  3000               	movlw	0
  2683  0313  00F1               	movwf	LCD_DATO@var+1
  2684  0314  120A  118A  233F  120A  118A  	fcall	_LCD_DATO
  2685  0319                     l1230:	
  2686                           
  2687                           ;Lib_LCD.c: 58:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2688  0319  3007               	movlw	7
  2689  031A  00F5               	movwf	??_LCD_CLEAR+1
  2690  031B  307D               	movlw	125
  2691  031C  00F4               	movwf	??_LCD_CLEAR
  2692  031D                     u627:	
  2693  031D  0BF4               	decfsz	??_LCD_CLEAR,f
  2694  031E  2B1D               	goto	u627
  2695  031F  0BF5               	decfsz	??_LCD_CLEAR+1,f
  2696  0320  2B1D               	goto	u627
  2697  0321                     l98:	
  2698  0321  0008               	return
  2699  0322                     __end_of_LCD_CLEAR:	
  2700                           
  2701                           	psect	text13
  2702  033F                     __ptext13:	
  2703 ;; *************** function _LCD_DATO *****************
  2704 ;; Defined at:
  2705 ;;		line 45 in file "Lib_LCD.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  var             2    0[COMMON] int 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2719 ;;      Params:         2       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0
  2721 ;;      Temps:          2       0       0       0       0
  2722 ;;      Totals:         4       0       0       0       0
  2723 ;;Total ram usage:        4 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_LCD_iniciar
  2729 ;;		_LCD_CLEAR
  2730 ;;		_LCD_CURSOR
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _LCD_DATO
  2736  033F                     _LCD_DATO:	
  2737  033F                     l1170:	
  2738                           ;incstack = 0
  2739                           ; Regs used in _LCD_DATO: [wreg]
  2740                           
  2741                           
  2742                           ;Lib_LCD.c: 46:     RA3 = 0;
  2743  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0341  1185               	bcf	5,3	;volatile
  2746  0342                     l1172:	
  2747                           
  2748                           ;Lib_LCD.c: 47:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2749  0342  3007               	movlw	7
  2750  0343  00F3               	movwf	??_LCD_DATO+1
  2751  0344  307D               	movlw	125
  2752  0345  00F2               	movwf	??_LCD_DATO
  2753  0346                     u637:	
  2754  0346  0BF2               	decfsz	??_LCD_DATO,f
  2755  0347  2B46               	goto	u637
  2756  0348  0BF3               	decfsz	??_LCD_DATO+1,f
  2757  0349  2B46               	goto	u637
  2758  034A                     l1174:	
  2759                           
  2760                           ;Lib_LCD.c: 48:     RA4 = 1;
  2761  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2762  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2763  034C  1605               	bsf	5,4	;volatile
  2764                           
  2765                           ;Lib_LCD.c: 49:     PORTB = var;
  2766  034D  0870               	movf	LCD_DATO@var,w
  2767  034E  0086               	movwf	6	;volatile
  2768                           
  2769                           ;Lib_LCD.c: 50:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2770  034F  3007               	movlw	7
  2771  0350  00F3               	movwf	??_LCD_DATO+1
  2772  0351  307D               	movlw	125
  2773  0352  00F2               	movwf	??_LCD_DATO
  2774  0353                     u647:	
  2775  0353  0BF2               	decfsz	??_LCD_DATO,f
  2776  0354  2B53               	goto	u647
  2777  0355  0BF3               	decfsz	??_LCD_DATO+1,f
  2778  0356  2B53               	goto	u647
  2779  0357                     l1176:	
  2780                           
  2781                           ;Lib_LCD.c: 51:     RA4 = 0;
  2782  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0359  1205               	bcf	5,4	;volatile
  2785                           
  2786                           ;Lib_LCD.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  2787  035A  3007               	movlw	7
  2788  035B  00F3               	movwf	??_LCD_DATO+1
  2789  035C  307D               	movlw	125
  2790  035D  00F2               	movwf	??_LCD_DATO
  2791  035E                     u657:	
  2792  035E  0BF2               	decfsz	??_LCD_DATO,f
  2793  035F  2B5E               	goto	u657
  2794  0360  0BF3               	decfsz	??_LCD_DATO+1,f
  2795  0361  2B5E               	goto	u657
  2796  0362                     l95:	
  2797  0362  0008               	return
  2798  0363                     __end_of_LCD_DATO:	
  2799                           
  2800                           	psect	text14
  2801  02CD                     __ptext14:	
  2802 ;; *************** function _I2C_Master_Write *****************
  2803 ;; Defined at:
  2804 ;;		line 77 in file "I2C.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  d               2    0[COMMON] unsigned int 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         2       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0
  2821 ;;      Totals:         2       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		_I2C_Master_Wait
  2827 ;; This function is called by:
  2828 ;;		_main
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           
  2833                           ;psect for function _I2C_Master_Write
  2834  02CD                     _I2C_Master_Write:	
  2835  02CD                     l1256:	
  2836                           ;incstack = 0
  2837                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2838                           
  2839                           
  2840                           ;I2C.c: 77: void I2C_Master_Write(unsigned d);I2C.c: 78: {;I2C.c: 79:     I2C_Master_Wai
      +                          t();
  2841  02CD  120A  118A  22D7  120A  118A  	fcall	_I2C_Master_Wait
  2842  02D2                     l1258:	
  2843                           
  2844                           ;I2C.c: 80:     SSPBUF = d;
  2845  02D2  0870               	movf	I2C_Master_Write@d,w
  2846  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2847  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2848  02D5  0093               	movwf	19	;volatile
  2849  02D6                     l182:	
  2850  02D6  0008               	return
  2851  02D7                     __end_of_I2C_Master_Write:	
  2852                           
  2853                           	psect	text15
  2854  02C4                     __ptext15:	
  2855 ;; *************** function _I2C_Master_Stop *****************
  2856 ;; Defined at:
  2857 ;;		line 65 in file "I2C.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0
  2874 ;;      Totals:         0       0       0       0       0
  2875 ;;Total ram usage:        0 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    1
  2878 ;; This function calls:
  2879 ;;		_I2C_Master_Wait
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           
  2886                           ;psect for function _I2C_Master_Stop
  2887  02C4                     _I2C_Master_Stop:	
  2888  02C4                     l1276:	
  2889                           ;incstack = 0
  2890                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2891                           
  2892                           
  2893                           ;I2C.c: 67:     I2C_Master_Wait();
  2894  02C4  120A  118A  22D7  120A  118A  	fcall	_I2C_Master_Wait
  2895  02C9                     l1278:	
  2896                           
  2897                           ;I2C.c: 68:     SSPCON2bits.PEN = 1;
  2898  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2899  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2900  02CB  1511               	bsf	17,2	;volatile
  2901  02CC                     l179:	
  2902  02CC  0008               	return
  2903  02CD                     __end_of_I2C_Master_Stop:	
  2904                           
  2905                           	psect	text16
  2906  02BB                     __ptext16:	
  2907 ;; *************** function _I2C_Master_Start *****************
  2908 ;; Defined at:
  2909 ;;		line 45 in file "I2C.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    1
  2930 ;; This function calls:
  2931 ;;		_I2C_Master_Wait
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           
  2938                           ;psect for function _I2C_Master_Start
  2939  02BB                     _I2C_Master_Start:	
  2940  02BB                     l1252:	
  2941                           ;incstack = 0
  2942                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2943                           
  2944                           
  2945                           ;I2C.c: 47:     I2C_Master_Wait();
  2946  02BB  120A  118A  22D7  120A  118A  	fcall	_I2C_Master_Wait
  2947  02C0                     l1254:	
  2948                           
  2949                           ;I2C.c: 48:     SSPCON2bits.SEN = 1;
  2950  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2951  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  2952  02C2  1411               	bsf	17,0	;volatile
  2953  02C3                     l173:	
  2954  02C3  0008               	return
  2955  02C4                     __end_of_I2C_Master_Start:	
  2956                           
  2957                           	psect	text17
  2958  03D6                     __ptext17:	
  2959 ;; *************** function _I2C_Master_Read *****************
  2960 ;; Defined at:
  2961 ;;		line 89 in file "I2C.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;  a               2    0[COMMON] unsigned short 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  temp            2    4[COMMON] unsigned short 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2    0[COMMON] unsigned short 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         2       0       0       0       0
  2976 ;;      Locals:         2       0       0       0       0
  2977 ;;      Temps:          2       0       0       0       0
  2978 ;;      Totals:         6       0       0       0       0
  2979 ;;Total ram usage:        6 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    1
  2982 ;; This function calls:
  2983 ;;		_I2C_Master_Wait
  2984 ;; This function is called by:
  2985 ;;		_main
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _I2C_Master_Read
  2991  03D6                     _I2C_Master_Read:	
  2992  03D6                     l1260:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2995                           
  2996                           
  2997                           ;I2C.c: 89: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 90: {;I2C.c: 91:    
      +                           unsigned short temp;;I2C.c: 92:     I2C_Master_Wait();
  2998  03D6  120A  118A  22D7  120A  118A  	fcall	_I2C_Master_Wait
  2999  03DB                     l1262:	
  3000                           
  3001                           ;I2C.c: 93:     SSPCON2bits.RCEN = 1;
  3002  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  3003  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  3004  03DD  1591               	bsf	17,3	;volatile
  3005                           
  3006                           ;I2C.c: 94:     I2C_Master_Wait();
  3007  03DE  120A  118A  22D7  120A  118A  	fcall	_I2C_Master_Wait
  3008  03E3                     l1264:	
  3009                           
  3010                           ;I2C.c: 95:     temp = SSPBUF;
  3011  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3012  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3013  03E5  0813               	movf	19,w	;volatile
  3014  03E6  00F2               	movwf	??_I2C_Master_Read
  3015  03E7  01F3               	clrf	??_I2C_Master_Read+1
  3016  03E8  0872               	movf	??_I2C_Master_Read,w
  3017  03E9  00F4               	movwf	I2C_Master_Read@temp
  3018  03EA  0873               	movf	??_I2C_Master_Read+1,w
  3019  03EB  00F5               	movwf	I2C_Master_Read@temp+1
  3020  03EC                     l1266:	
  3021                           
  3022                           ;I2C.c: 96:     I2C_Master_Wait();
  3023  03EC  120A  118A  22D7  120A  118A  	fcall	_I2C_Master_Wait
  3024  03F1                     l1268:	
  3025                           
  3026                           ;I2C.c: 97:     if(a == 1){
  3027  03F1  0370               	decf	I2C_Master_Read@a,w
  3028  03F2  0471               	iorwf	I2C_Master_Read@a+1,w
  3029  03F3  1D03               	btfss	3,2
  3030  03F4  2BF6               	goto	u421
  3031  03F5  2BF7               	goto	u420
  3032  03F6                     u421:	
  3033  03F6  2BFB               	goto	l185
  3034  03F7                     u420:	
  3035  03F7                     l1270:	
  3036                           
  3037                           ;I2C.c: 98:         SSPCON2bits.ACKDT = 0;
  3038  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  3039  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  3040  03F9  1291               	bcf	17,5	;volatile
  3041                           
  3042                           ;I2C.c: 99:     }else{
  3043  03FA  2BFE               	goto	l186
  3044  03FB                     l185:	
  3045                           
  3046                           ;I2C.c: 100:         SSPCON2bits.ACKDT = 1;
  3047  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3048  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3049  03FD  1691               	bsf	17,5	;volatile
  3050  03FE                     l186:	
  3051                           ;I2C.c: 101:     }
  3052                           
  3053                           
  3054                           ;I2C.c: 102:     SSPCON2bits.ACKEN = 1;
  3055  03FE  1611               	bsf	17,4	;volatile
  3056  03FF                     l1272:	
  3057                           
  3058                           ;I2C.c: 103:     return temp;
  3059  03FF  0875               	movf	I2C_Master_Read@temp+1,w
  3060  0400  00F1               	movwf	?_I2C_Master_Read+1
  3061  0401  0874               	movf	I2C_Master_Read@temp,w
  3062  0402  00F0               	movwf	?_I2C_Master_Read
  3063  0403                     l187:	
  3064  0403  0008               	return
  3065  0404                     __end_of_I2C_Master_Read:	
  3066                           
  3067                           	psect	text18
  3068  02D7                     __ptext18:	
  3069 ;; *************** function _I2C_Master_Wait *****************
  3070 ;; Defined at:
  3071 ;;		line 32 in file "I2C.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_I2C_Master_Start
  3095 ;;		_I2C_Master_Stop
  3096 ;;		_I2C_Master_Write
  3097 ;;		_I2C_Master_Read
  3098 ;;		_I2C_Master_RepeatedStart
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _I2C_Master_Wait
  3104  02D7                     _I2C_Master_Wait:	
  3105  02D7                     l1178:	
  3106                           ;incstack = 0
  3107                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3108                           
  3109  02D7                     l167:	
  3110                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3111                           
  3112  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  3113  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  3114  02D9  1914               	btfsc	20,2	;volatile
  3115  02DA  2ADC               	goto	u331
  3116  02DB  2ADD               	goto	u330
  3117  02DC                     u331:	
  3118  02DC  2AD7               	goto	l167
  3119  02DD                     u330:	
  3120  02DD                     l1180:	
  3121  02DD  0811               	movf	17,w	;volatile
  3122  02DE  391F               	andlw	31
  3123  02DF  1D03               	btfss	3,2
  3124  02E0  2AE2               	goto	u341
  3125  02E1  2AE3               	goto	u340
  3126  02E2                     u341:	
  3127  02E2  2AD7               	goto	l167
  3128  02E3                     u340:	
  3129  02E3                     l170:	
  3130  02E3  0008               	return
  3131  02E4                     __end_of_I2C_Master_Wait:	
  3132  007E                     btemp	set	126	;btemp
  3133  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_STRING@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), 

    voltaje_temp	PTR unsigned int  size(1) Largest target is 6
		 -> mapeo@result(BANK0[6]), NULL(NULL[0]), 

    sp__mapeo	PTR unsigned int  size(1) Largest target is 6
		 -> mapeo@result(BANK0[6]), 

    voltaje_map	PTR unsigned int  size(1) Largest target is 6
		 -> mapeo@result(BANK0[6]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _I2C_Master_Init->___lldiv
    _mapeo->___wmul
    _LCD_iniciar->_LCD_DATO
    _LCD_STRING->_LCD_CHAR
    _LCD_CURSOR->_LCD_DATO
    _LCD_CLEAR->_LCD_DATO

Critical Paths under _main in BANK0

    _main->_mapeo
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6232
                                              9 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                           _LCD_CHAR
                          _LCD_CLEAR
                         _LCD_CURSOR
                         _LCD_STRING
                        _LCD_iniciar
                             ___bmul
                              _mapeo
                              _setup
                       _uint_to_char
 ---------------------------------------------------------------------------------
 (1) _uint_to_char                                         4     4      0      62
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _mapeo                                               15    13      2    1356
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCD_iniciar                                          2     2      0     934
                                              4 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_STRING                                           3     3      0     145
                                              2 COMMON     3     3      0
                           _LCD_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_CHAR                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_CURSOR                                           6     2      4    1676
                                              4 COMMON     6     2      4
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (1) _LCD_CLEAR                                            2     2      0     934
                                              4 COMMON     2     2      0
                           _LCD_DATO
 ---------------------------------------------------------------------------------
 (2) _LCD_DATO                                             4     2      2     934
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _LCD_CHAR
   _LCD_CLEAR
     _LCD_DATO
   _LCD_CURSOR
     _LCD_DATO
   _LCD_STRING
     _LCD_CHAR
   _LCD_iniciar
     _LCD_DATO
   ___bmul
   _mapeo
     ___wmul
   _setup
     _I2C_Master_Init
       ___lldiv
   _uint_to_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      17       5       28.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 24 17:39:52 2020

              LCD_CURSOR@a 0074                LCD_CURSOR@b 0076                LCD_CURSOR@d 0078  
                        pc 0002             ___bmul@product 0072                __CFG_CP$OFF 0000  
                       l65 033E                         l92 0520                         l95 0362  
                       l79 0657                         l98 0321                         fsr 0004  
      ___wmul@multiplicand 0072                        l104 03D5                        l113 0387  
                      l107 02F2                        l302 0307                        l135 05B3  
                      l312 04A1                        l170 02E3                        l164 043B  
                      l173 02C3                        l182 02D6                        l167 02D7  
                      l185 03FB                        l186 03FE                        l187 0403  
                      l179 02CC                        l276 0394                        l278 03AC  
                      _GIE 005F                        _RA3 002B                        _RA4 002C  
                      u310 0499                        u311 0498                        u400 03CC  
                      u320 041B                        u401 03CB                        u305 048B  
                      u330 02DD                        u410 0387                        u250 044C  
                      u331 02DC                        u411 0386                        u251 044B  
                      u340 02E3                        u420 03F7                        u341 02E2  
                      u421 03F6                        u325 0416                        u350 038E  
                      u430 05BB                        u270 0460                        u351 038D  
                      u271 045F                        u440 05F6                        u441 05F5  
                      u265 0451                        u450 0626                        u290 047B  
             __CFG_CPD$OFF 0000                        u451 0625                        u291 047A  
                      u507 06CB                        u380 03A8                        u460 0656  
                      u381 03A7                        u365 0395                        u461 0655  
                      u445 05F2                        u285 0462                        u517 06FD  
                      u390 03B3                        u470 02F9                        u391 03B2  
                      u607 051D                        u527 04A6                        u471 02F8  
                      u375 039C                        u455 0622                        u295 0477  
                      u480 0306                        u617 02ED                        u537 04B8  
                      u481 0305                        u465 0652                        u627 031D  
                      u547 04C7                        u637 0346                        u557 04D4  
                      u647 0353                        u567 04E1                        u657 035E  
                      u577 04EF                        u497 06A1                        u587 04FF  
                      u597 050F               _uint_to_char 0521                        fsr0 0004  
                      indf 0000                LCD_STRING@a 0074                LCD_STRING@n 0072  
             __CFG_LVP$OFF 0000                       l1200 0329                       l1210 04C5  
                     l1130 044F                       l1202 0331                       l1220 04F2  
                     l1212 04C9                       l1204 04A2                       l1300 0656  
                     l1140 0489                       l1132 045C                       l1230 0319  
                     l1150 02E5                       l1222 0504                       l1214 04D6  
                     l1206 04AB                       l1142 048A                       l1134 0460  
                     l1126 043C                       l1310 052D                       l1240 03CC  
                     l1232 03AD                       l1152 02E8                       l1224 050D  
                     l1216 04DF                       l1208 04B4                       l1144 0493  
                     l1136 0469                       l1128 044C                       l1160 0408  
                     l1320 0546                       l1312 0532                       l1304 0522  
                     l1400 0702                       l1170 033F                       l1234 03B3  
                     l1154 02EA                       l1250 037A                       l1226 051B  
                     l1218 04ED                       l1138 047B                       l1146 0499  
                     l1162 040B                       l1330 055F                       l1322 054B  
                     l1314 0537                       l1306 0523                       l1410 0749  
                     l1402 0713                       l1180 02DD                       l1260 03D6  
                     l1252 02BB                       l1172 0342                       l1228 0308  
                     l1236 03BB                       l1156 02EF                       l1244 0364  
                     l1164 0438                       l1332 0564                       l1324 0550  
                     l1316 053C                       l1308 0528                       l1340 0578  
                     l1420 078B                       l1412 075A                       l1404 0726  
                     l1270 03F7                       l1262 03DB                       l1254 02C0  
                     l1174 034A                       l1238 03C5                       l1246 0367  
                     l1350 02F4                       l1190 03A2                       l1182 0388  
                     l1166 0439                       l1158 0404                       l1334 0569  
                     l1326 0555                       l1318 0541                       l1342 05B2  
                     l1430 07E5                       l1422 07A0                       l1414 076B  
                     l1406 0733                       l1272 03FF                       l1264 03E3  
                     l1256 02CD                       l1176 0357                       l1248 0374  
                     l1360 0306                       l1352 02F5                       l1192 03A8  
                     l1184 038A                       l1280 05B7                       l1168 043A  
                     l1336 056E                       l1328 055A                       l1424 07AD  
                     l1416 0771                       l1408 0743                       l1178 02D7  
                     l1266 03EC                       l1258 02D2                       l1354 02F9  
                     l1186 038E                       l1290 060A                       l1282 05C0  
                     l1338 0573                       l1426 07BD                       l1418 077E  
                     l1370 067F                       l1268 03F1                       l1276 02C4  
                     l1356 02FD                       l1188 039B                       l1292 0619  
                     l1284 05DA                       l1196 0322                       l1428 07CE  
                     l1380 06AB                       l1372 0688                       l1364 0658  
                     l1278 02C9                       l1358 02FF                       l1294 0626  
                     l1286 05E9                       l1198 0326                       l1390 06D6  
                     l1382 06B4                       l1374 0696                       l1366 0674  
                     l1296 063A                       l1288 05F6                       l1456 0580  
                     l1392 06DB                       l1384 06C0                       l1376 069B  
                     l1368 067A                       l1298 0649                       l1394 06E4  
                     l1386 06C5                       l1378 06A6                       l1396 06F2  
                     l1388 06D0                       l1398 06F7                       STR_1 0009  
                     _PEIE 005E         __size_of_LCD_CLEAR 001A               ?_LCD_iniciar 0070  
             __CFG_WRT$OFF 0000                       _main 0658                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000          ___bmul@multiplier 0073  
              _voltaje_map 0033           __end_of_LCD_CHAR 02F3           __end_of_LCD_DATO 0363  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070              __CFG_WDTE$OFF 0000  
       uint_to_char@numChr 0073                      _ANSEL 0188            __end_of___lldiv 04A2  
       uint_to_char@numero 0072                      _PORTA 0005                      _PORTB 0006  
                    _PORTD 0008                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063        __size_of_LCD_CURSOR 0029  
           __CFG_FCMEN$OFF 0000        __size_of_LCD_STRING 0025                      _mapeo 05B4  
                    _setup 0322             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                mapeo@limPIC 0076                      wtemp0 007E  
              mapeo@result 0021             __CFG_MCLRE$OFF 0000            __initialization 07EF  
             _voltaje_temp 0032               __end_of_main 07EF          __end_of_LCD_CLEAR 0322  
                   ??_main 0029          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     ?_mapeo 0076  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013             __CFG_PWRTE$OFF 0000                     ___bmul 02F3  
                   ___wmul 0388                  ??___lldiv 0078                  LCD_CHAR@a 0071  
                ?_LCD_CHAR 0070                  ?_LCD_DATO 0070    __end_of__initialization 07FC  
     __size_of_LCD_iniciar 007F               ??_LCD_CURSOR 0078        ___bmul@multiplicand 0070  
             ??_LCD_STRING 0072             __pcstackCOMMON 0070              __end_of_mapeo 0658  
            __end_of_setup 033F         __end_of_LCD_CURSOR 03D6                    ??_mapeo 0078  
       __end_of_LCD_STRING 0388                    ??_setup 007E                 __pbssBANK0 002C  
               ??_LCD_CHAR 0070                 ??_LCD_DATO 0072                 __pmaintext 0658  
                  ?___bmul 0070                    ?___wmul 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                    _Val_ADC 0035  
          __size_of___bmul 0015                    ___lldiv 043C            __size_of___wmul 0025  
                  __ptext1 0521                    __ptext2 0322                    __ptext3 0404  
                  __ptext4 043C                    __ptext5 05B4                    __ptext6 0388  
                  __ptext7 02F3                    __ptext8 04A2                    __ptext9 0363  
                _LCD_CLEAR 0308   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
               ?_LCD_CLEAR 0070                  _TRISAbits 0085                  _TRISCbits 0087  
        __size_of_LCD_CHAR 000F          __size_of_LCD_DATO 0024                 mapeo@F1390 002C  
           __end_of___bmul 0308             __end_of___wmul 03AD              ?_uint_to_char 0070  
      start_initialization 07EF                 mapeo@valor 0020              ??_LCD_iniciar 0074  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                   ??___bmul 0071                   ??___wmul 0074  
           ??_uint_to_char 0070                ??_LCD_CLEAR 0074                  ___latbits 0002  
            __pcstackBANK0 0020     __CFG_FOSC$INTRC_CLKOUT 0000           _I2C_Master_Start 02BB  
         _I2C_Master_Write 02CD        __end_of_LCD_iniciar 0521                   ?___lldiv 0070  
                __pstrings 0003                   _ADC_Temp 0036             __size_of_mapeo 00A4  
           __size_of_setup 001D                   _LCD_CHAR 02E4                   _LCD_DATO 033F  
           ___wmul@product 0074                __stringbase 0008          ___wmul@multiplier 0070  
      I2C_Master_Read@temp 0074                _LCD_iniciar 04A2       __end_of_uint_to_char 05B4  
                 _Val_Cont 0034           __size_of___lldiv 0066         __end_of__stringtab 0009  
          _I2C_Master_Init 0404            _I2C_Master_Read 03D6            _I2C_Master_Wait 02D7  
          _I2C_Master_Stop 02C4                   __ptext10 02E4                   __ptext11 03AD  
                 __ptext12 0308                   __ptext13 033F                   __ptext14 02CD  
                 __ptext15 02C4                   __ptext16 02BB                   __ptext17 03D6  
                 __ptext18 02D7          __CFG_BOR4V$BOR40V 0000              __size_of_main 0197  
               _LCD_CURSOR 03AD                 _LCD_STRING 0363   __end_of_I2C_Master_Start 02C4  
 __end_of_I2C_Master_Write 02D7           ___lldiv@dividend 0074                  stringcode 0003  
  __end_of_I2C_Master_Init 043C    __end_of_I2C_Master_Read 0404    __end_of_I2C_Master_Wait 02E4  
  __end_of_I2C_Master_Stop 02CD           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
           mapeo@dividendo 0027                   stringdir 0003                   stringtab 0003  
           mapeo@limFisico 0077                _SSPCON2bits 0091      __size_of_uint_to_char 0093  
              LCD_DATO@var 0070                ?_LCD_CURSOR 0074                ?_LCD_STRING 0070  
